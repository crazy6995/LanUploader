{"version":3,"file":"lan-uploader.min.js","sources":["../src/utils/request.js","../src/chunk/ChunkUploadHandler.js","../src/chunk/LanChunkUploadHandler.js","../node_modules/js_data-collections/collections.js","../src/components/FileUpload.vue","../src/utils/utils.js","../src/index.js"],"sourcesContent":["/**\r\n * Creates a XHR request\r\n *\r\n * @param {Object} options\r\n */\r\nexport const createRequest = (options) => {\r\n  const xhr = new XMLHttpRequest()\r\n  xhr.open(options.method || 'GET', options.url)\r\n  xhr.responseType = 'json'\r\n  if (options.headers) {\r\n    Object.keys(options.headers).forEach(key => {\r\n      xhr.setRequestHeader(key, options.headers[key])\r\n    })\r\n  }\r\n\r\n  return xhr\r\n}\r\n\r\n/**\r\n * Sends a XHR request with certain body\r\n *\r\n * @param {XMLHttpRequest} xhr\r\n * @param {Object} body\r\n */\r\nexport const sendRequest = (xhr, body) => {\r\n  return new Promise((resolve, reject) => {\r\n    xhr.onload = () => {\r\n      if (xhr.status >= 200 && xhr.status < 300) {\r\n        var response\r\n        try {\r\n          response = JSON.parse(xhr.response)\r\n        } catch (err) {\r\n          response = xhr.response\r\n        }\r\n        resolve(response)\r\n      } else {\r\n        reject(xhr.response)\r\n      }\r\n    }\r\n    xhr.onerror = () => reject(xhr.response)\r\n    xhr.send(JSON.stringify(body))\r\n  })\r\n}\r\n\r\n/**\r\n * Sends a XHR request with certain form data\r\n *\r\n * @param {XMLHttpRequest} xhr\r\n * @param {Object} data\r\n */\r\nexport const sendFormRequest = (xhr, data) => {\r\n  const body = new FormData()\r\n  for (var name in data) {\r\n    body.append(name, data[name])\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    xhr.onload = () => {\r\n      if (xhr.status >= 200 && xhr.status < 300) {\r\n        var response\r\n        try {\r\n          response = JSON.parse(xhr.response)\r\n        } catch (err) {\r\n          response = xhr.response\r\n        }\r\n        resolve(response)\r\n      } else {\r\n        reject(xhr.response)\r\n      }\r\n    }\r\n    xhr.onerror = () => reject(xhr.response)\r\n    xhr.send(body)\r\n  })\r\n}\r\n\r\n/**\r\n * Creates and sends XHR request\r\n *\r\n * @param {Object} options\r\n *\r\n * @returns Promise\r\n */\r\nexport default function (options) {\r\n  const xhr = createRequest(options)\r\n\r\n  return sendRequest(xhr, options.body)\r\n}\r\n","import {\r\n  default as request,\r\n  createRequest,\r\n  sendFormRequest\r\n} from '../utils/request'\r\n\r\nexport default class ChunkUploadHandler {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {File} file\r\n   * @param {Object} options\r\n   */\r\n  constructor (file, options) {\r\n    this.file = file\r\n    this.options = options\r\n  }\r\n\r\n  /**\r\n   * Gets the max retries from options\r\n   */\r\n  get maxRetries () {\r\n    return parseInt(this.options.maxRetries)\r\n  }\r\n\r\n  /**\r\n   * Gets the max number of active chunks being uploaded at once from options\r\n   */\r\n  get maxActiveChunks () {\r\n    return parseInt(this.options.maxActive)\r\n  }\r\n\r\n  /**\r\n   * Gets the file type\r\n   */\r\n  get fileType () {\r\n    return this.file.type\r\n  }\r\n\r\n  /**\r\n   * Gets the file size\r\n   */\r\n  get fileSize () {\r\n    return this.file.size\r\n  }\r\n\r\n  /**\r\n   * Gets the file size\r\n   */\r\n  get fileName () {\r\n    return this.file.name\r\n  }\r\n\r\n  /**\r\n   * Gets action (url) to upload the file\r\n   */\r\n  get action () {\r\n    return this.options.action || null\r\n  }\r\n\r\n  /**\r\n   * Gets the body to be merged when sending the request in start phase\r\n   */\r\n  get startBody () {\r\n    return this.options.startBody || {}\r\n  }\r\n\r\n  /**\r\n   * Gets the body to be merged when sending the request in upload phase\r\n   */\r\n  get uploadBody () {\r\n    return this.options.uploadBody || {}\r\n  }\r\n\r\n  /**\r\n   * Gets the body to be merged when sending the request in finish phase\r\n   */\r\n  get finishBody () {\r\n    return this.options.finishBody || {}\r\n  }\r\n\r\n  /**\r\n   * Gets the headers of the requests from options\r\n   */\r\n  get headers () {\r\n    return this.options.headers || {}\r\n  }\r\n\r\n  /**\r\n   * Whether it's ready to upload files or not\r\n   */\r\n  get readyToUpload () {\r\n    return !!this.chunks\r\n  }\r\n\r\n  /**\r\n   * Gets the progress of the chunk upload\r\n   * - Gets all the completed chunks\r\n   * - Gets the progress of all the chunks that are being uploaded\r\n   */\r\n  get progress () {\r\n    const completedProgress = (this.chunksUploaded.length / this.chunks.length) * 100\r\n    const uploadingProgress = this.chunksUploading.reduce((progress, chunk) => {\r\n      return progress + ((chunk.progress | 0) / this.chunks.length)\r\n    }, 0)\r\n\r\n    return Math.min(completedProgress + uploadingProgress, 100)\r\n  }\r\n\r\n  /**\r\n   * Gets all the chunks that are pending to be uploaded\r\n   */\r\n  get chunksToUpload () {\r\n    return this.chunks.filter(chunk => {\r\n      return !chunk.active && !chunk.uploaded\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Whether there are chunks to upload or not\r\n   */\r\n  get hasChunksToUpload () {\r\n    return this.chunksToUpload.length > 0\r\n  }\r\n\r\n  /**\r\n   * Gets all the chunks that are uploading\r\n   */\r\n  get chunksUploading () {\r\n    return this.chunks.filter(chunk => {\r\n      return !!chunk.xhr && !!chunk.active\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets all the chunks that have finished uploading\r\n   */\r\n  get chunksUploaded () {\r\n    return this.chunks.filter(chunk => {\r\n      return !!chunk.uploaded\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Creates all the chunks in the initial state\r\n   */\r\n  createChunks () {\r\n    this.chunks = []\r\n\r\n    let start = 0\r\n    let end = this.chunkSize\r\n    while (start < this.fileSize) {\r\n      this.chunks.push({\r\n        blob: this.file.file.slice(start, end),\r\n        startOffset: start,\r\n        active: false,\r\n        retries: this.maxRetries\r\n      })\r\n      start = end\r\n      end = start + this.chunkSize\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the progress of the file with the handler's progress\r\n   */\r\n  updateFileProgress () {\r\n    this.file.progress = this.progress\r\n  }\r\n\r\n  /**\r\n   * Paues the upload process\r\n   * - Stops all active requests\r\n   * - Sets the file not active\r\n   */\r\n  pause () {\r\n    this.file.active = false\r\n    this.stopChunks()\r\n  }\r\n\r\n  /**\r\n   * Stops all the current chunks\r\n   */\r\n  stopChunks () {\r\n    this.chunksUploading.forEach(chunk => {\r\n      chunk.xhr.abort()\r\n      chunk.active = false\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Resumes the file upload\r\n   * - Sets the file active\r\n   * - Starts the following chunks\r\n   */\r\n  resume () {\r\n    this.file.active = true\r\n    this.startChunking()\r\n  }\r\n\r\n  /**\r\n   * Starts the file upload\r\n   *\r\n   * @returns Promise\r\n   * - resolve  The file was uploaded\r\n   * - reject   The file upload failed\r\n   */\r\n  upload () {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve\r\n      this.reject = reject\r\n    })\r\n    this.start()\r\n\r\n    return this.promise\r\n  }\r\n\r\n  /**\r\n   * Start phase\r\n   * Sends a request to the backend to initialise the chunks\r\n   */\r\n  start () {\r\n    request({\r\n      method: 'POST',\r\n      headers: Object.assign({}, this.headers, {\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      url: this.action,\r\n      body: Object.assign(this.startBody, {\r\n        phase: 'start',\r\n        mime_type: this.fileType,\r\n        size: this.fileSize,\r\n        name: this.fileName\r\n      })\r\n    }).then(res => {\r\n      if (res.status !== 'success') {\r\n        this.file.response = res\r\n        return this.reject('server')\r\n      }\r\n\r\n      this.sessionId = res.data.session_id\r\n      this.chunkSize = Number(res.data.end_offset)\r\n\r\n      this.createChunks()\r\n      this.startChunking()\r\n    }).catch(res => {\r\n      this.file.response = res\r\n      this.reject('server')\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Starts to upload chunks\r\n   */\r\n  startChunking () {\r\n    for (let i = 0; i < this.maxActiveChunks; i++) {\r\n      this.uploadNextChunk()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Uploads the next chunk\r\n   * - Won't do anything if the process is paused\r\n   * - Will start finish phase if there are no more chunks to upload\r\n   */\r\n  uploadNextChunk () {\r\n    if (this.file.active) {\r\n      if (this.hasChunksToUpload) {\r\n        return this.uploadChunk(this.chunksToUpload[0])\r\n      }\r\n\r\n      if (this.chunksUploading.length === 0) {\r\n        return this.finish()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Uploads a chunk\r\n   * - Sends the chunk to the backend\r\n   * - Sets the chunk as uploaded if everything went well\r\n   * - Decreases the number of retries if anything went wrong\r\n   * - Fails if there are no more retries\r\n   *\r\n   * @param {Object} chunk\r\n   */\r\n  uploadChunk (chunk) {\r\n    chunk.progress = 0\r\n    chunk.active = true\r\n    this.updateFileProgress()\r\n    chunk.xhr = createRequest({\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      url: this.action\r\n    })\r\n\r\n    chunk.xhr.upload.addEventListener('progress', function (evt) {\r\n      if (evt.lengthComputable) {\r\n        chunk.progress = Math.round(evt.loaded / evt.total * 100)\r\n      }\r\n    }, false)\r\n\r\n    sendFormRequest(chunk.xhr, Object.assign(this.uploadBody, {\r\n      phase: 'upload',\r\n      session_id: this.sessionId,\r\n      start_offset: chunk.startOffset,\r\n      chunk: chunk.blob\r\n    })).then(res => {\r\n      chunk.active = false\r\n      if (res.status === 'success') {\r\n        chunk.uploaded = true\r\n      } else {\r\n        if (chunk.retries-- <= 0) {\r\n          this.stopChunks()\r\n          return this.reject('upload')\r\n        }\r\n      }\r\n\r\n      this.uploadNextChunk()\r\n    }).catch(() => {\r\n      chunk.active = false\r\n      if (chunk.retries-- <= 0) {\r\n        this.stopChunks()\r\n        return this.reject('upload')\r\n      }\r\n\r\n      this.uploadNextChunk()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Finish phase\r\n   * Sends a request to the backend to finish the process\r\n   */\r\n  finish () {\r\n    this.updateFileProgress()\r\n\r\n    request({\r\n      method: 'POST',\r\n      headers: Object.assign({}, this.headers, {\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      url: this.action,\r\n      body: Object.assign(this.finishBody, {\r\n        phase: 'finish',\r\n        session_id: this.sessionId\r\n      })\r\n    }).then(res => {\r\n      this.file.response = res\r\n      if (res.status !== 'success') {\r\n        return this.reject('server')\r\n      }\r\n\r\n      this.resolve(res)\r\n    }).catch(res => {\r\n      this.file.response = res\r\n      this.reject('server')\r\n    })\r\n  }\r\n}\r\n","import ChunkUploadHandler from './ChunkUploadHandler'\r\n// import {\r\n//   default as request\r\n//   createRequest,\r\n//   sendFormRequest\r\n// } from '../utils/request'\r\n\r\n/**\r\n * 自定义的chunkUpload处理器\r\n */\r\nexport default class LanChunkUploadHandler extends ChunkUploadHandler {\r\n  get startBody() {\r\n    return {\r\n      ...this.file.startBody,\r\n      ...this.file.data\r\n    }\r\n  }\r\n\r\n  get uploadBody() {\r\n    return {\r\n      ...this.file.uploadBody,\r\n      ...this.file.data\r\n    }\r\n  }\r\n\r\n  get finishBody() {\r\n    return {\r\n      ...this.file.finishBody,\r\n      ...this.file.data\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 过滤已上传过的 chunks\r\n   */\r\n  get filterChunks() {\r\n    if (this.file.uploadedChunks) {\r\n      return this.file.uploadedChunks.join(',')\r\n    } else {\r\n      return []\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the progress of the file with the handler's progress\r\n   */\r\n  updateFileProgress() {\r\n    // this.file.uploader.update(this.file, { progress: this.progress })\r\n    this.file.progress = this.progress\r\n    this.file.uploader.refreshProgress()\r\n  }\r\n\r\n  /**\r\n   * Creates all the chunks in the initial state\r\n   */\r\n  createChunks() {\r\n    this.chunks = []\r\n\r\n    let start = 0\r\n    let end = this.chunkSize\r\n    let index = 0 // chunk序号\r\n    while (start < this.fileSize) {\r\n      if (this.filterChunks.indexOf(index) !== -1) {\r\n        // 过滤\r\n        start = end\r\n        end = start + this.chunkSize\r\n        index++\r\n        continue\r\n      }\r\n      this.chunks.push({\r\n        blob: this.file.file.slice(start, end),\r\n        startOffset: start,\r\n        active: false,\r\n        retries: this.maxRetries,\r\n        index: index\r\n      })\r\n      start = end\r\n      end = start + this.chunkSize\r\n      index++\r\n    }\r\n  }\r\n}\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Collections\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Collections\"] = factory();\n\telse\n\t\troot[\"Collections\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\texports.MultiMap = exports.RBTree = exports.Set = exports.ArrayUtils = exports.Trie = exports.Graph = exports.BST = exports.HashSet = exports.HashMap = exports.PriorityQueue = exports.BHeap = exports.Queue = exports.Stack = exports.List = undefined;\n\n\tvar _List = __webpack_require__(1);\n\n\tvar _List2 = _interopRequireDefault(_List);\n\n\tvar _Stack = __webpack_require__(3);\n\n\tvar _Stack2 = _interopRequireDefault(_Stack);\n\n\tvar _Queue = __webpack_require__(4);\n\n\tvar _Queue2 = _interopRequireDefault(_Queue);\n\n\tvar _BHeap = __webpack_require__(5);\n\n\tvar _BHeap2 = _interopRequireDefault(_BHeap);\n\n\tvar _PriorityQueue = __webpack_require__(6);\n\n\tvar _PriorityQueue2 = _interopRequireDefault(_PriorityQueue);\n\n\tvar _HashMap = __webpack_require__(7);\n\n\tvar _HashMap2 = _interopRequireDefault(_HashMap);\n\n\tvar _HashSet = __webpack_require__(9);\n\n\tvar _HashSet2 = _interopRequireDefault(_HashSet);\n\n\tvar _BST = __webpack_require__(11);\n\n\tvar _BST2 = _interopRequireDefault(_BST);\n\n\tvar _Graph = __webpack_require__(14);\n\n\tvar _Graph2 = _interopRequireDefault(_Graph);\n\n\tvar _Trie = __webpack_require__(16);\n\n\tvar _Trie2 = _interopRequireDefault(_Trie);\n\n\tvar _ArrayUtils = __webpack_require__(17);\n\n\tvar _ArrayUtils2 = _interopRequireDefault(_ArrayUtils);\n\n\tvar _RedBlackTree = __webpack_require__(15);\n\n\tvar _RedBlackTree2 = _interopRequireDefault(_RedBlackTree);\n\n\tvar _Set = __webpack_require__(18);\n\n\tvar _Set2 = _interopRequireDefault(_Set);\n\n\tvar _MultiMap = __webpack_require__(19);\n\n\tvar _MultiMap2 = _interopRequireDefault(_MultiMap);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\texports.List = _List2['default'];\n\texports.Stack = _Stack2['default'];\n\texports.Queue = _Queue2['default'];\n\texports.BHeap = _BHeap2['default'];\n\texports.PriorityQueue = _PriorityQueue2['default'];\n\texports.HashMap = _HashMap2['default'];\n\texports.HashSet = _HashSet2['default'];\n\texports.BST = _BST2['default'];\n\texports.Graph = _Graph2['default'];\n\texports.Trie = _Trie2['default'];\n\texports.ArrayUtils = _ArrayUtils2['default'];\n\texports.Set = _Set2['default'];\n\texports.RBTree = _RedBlackTree2['default'];\n\texports.MultiMap = _MultiMap2['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _Util = __webpack_require__(2);\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Returns the node at given index in linked list\n\t * @private\n\t * @param {number} index - The index of the node to return\n\t * @throws {TypeError} When @param index is not a number\n\t * @returns {(Node|undefined)} Node @param index or undefined if not found\n\t */\n\tfunction getNode(index) {\n\t  var head = this.head;\n\t  if (index < 0 || !head) {\n\t    return;\n\t  }\n\t  var i = 0;\n\t  while (i < index) {\n\t    head = head.next;\n\t    i += 1;\n\t    // index wanted is > than list size\n\t    if (!head) {\n\t      return;\n\t    }\n\t  }\n\t  return head;\n\t}\n\n\t/**\n\t * Linked List Node\n\t * @private\n\t * @class\n\t * @param {*} The data to assign to the node\n\t */\n\n\tvar Node = function Node(data) {\n\t  _classCallCheck(this, Node);\n\n\t  this.data = data;\n\t  this.next = null;\n\t  // previous node\n\t  this.prev = null;\n\t};\n\n\t/**\n\t * Linked List representation\n\t * @class\n\t *\n\t * @example\n\t * const list = new Collections.LinkedList();\n\t * // FOR ALL EXAMPLES BELOW. ASSUME list IS CLEARED BEFORE EACH EXAMPLE\n\t */\n\n\n\tvar List = function () {\n\t  function List() {\n\t    _classCallCheck(this, List);\n\n\t    this.head = null;\n\t    this.tail = null;\n\t    this.length = 0;\n\t  }\n\n\t  /**\n\t   * Adds the given data to left-most end of linked list\n\t   * @param {*} data - The data to insert\n\t   * @returns {List} The instance this method was called\n\t   *\n\t   * @example\n\t   * list.addToFront(\"a\")\n\t   *  .addToFront(\"b\"); // list is <\"b\", \"a\">\n\t   */\n\n\n\t  List.prototype.addToFront = function addToFront(data) {\n\t    var head = this.head,\n\t        length = this.length;\n\n\t    var newNode = new Node(data);\n\t    if (!head) {\n\t      this.head = newNode;\n\t      this.tail = this.head;\n\t    } else {\n\t      // non-empty list\n\t      this.head = newNode;\n\t      newNode.next = head;\n\t      head.prev = newNode;\n\t    }\n\t    this.length = length + 1;\n\t    return this;\n\t  };\n\n\t  /**\n\t   * Returns the data at given index\n\t   * @param {number} index - The index to look at\n\t   * @throws {TypeError} Will throw error if @param index is not number\n\t   * @returns {(*|undefined)} Index of element if @param index is in range\n\t   * or undefined\n\t   *\n\t   * @example\n\t   * list.addToFront(\"a\")\n\t   *  .addToFront(\"b\")\n\t   *  .addToFront(\"c\");\n\t   * const getSomething = list.elementAtIndex(2); // \"a\"\n\t   * list.elementAtIndex(13); // undefined\n\t   */\n\n\n\t  List.prototype.elementAtIndex = function elementAtIndex() {\n\t    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n\t    var foundNode = getNode.call(this, index);\n\t    return foundNode ? foundNode.data : undefined;\n\t  };\n\n\t  /**\n\t   * Adds the given data to right-most end of linked list\n\t   * @param {*} data - the data to insert\n\t   * @returns {List} The instance this method was called\n\t   *\n\t   * @example\n\t   * list.addToBack(\"a\")\n\t   *  .addToBack(\"b\"); // list is <\"a\", \"b\">\n\t   */\n\n\n\t  List.prototype.addToBack = function addToBack(data) {\n\t    var tail = this.tail,\n\t        length = this.length;\n\n\t    var newNode = new Node(data);\n\t    if (!tail) {\n\t      this.head = newNode;\n\t      this.tail = this.head;\n\t    } else {\n\t      this.tail = newNode;\n\t      newNode.prev = tail;\n\t      tail.next = newNode;\n\t    }\n\t    this.length = length + 1;\n\t    return this;\n\t  };\n\n\t  /**\n\t   * Removes the left-most element in the linked list\n\t   * @returns {(*|undefined)} The removed data or undefined if nothing removed\n\t   *\n\t   * @example\n\t   * list.addToBack(\"a\")\n\t   *  .addToBack(\"b\");\n\t   * const removedData = list.removeFront(); // \"a\"\n\t   * // list is now <\"b\">\n\t   */\n\n\n\t  List.prototype.removeFront = function removeFront() {\n\t    var head = this.head,\n\t        length = this.length;\n\n\t    var removedData = void 0;\n\t    if (head) {\n\t      removedData = head.data;\n\t      this.length = length - 1;\n\t      this.head = head.next;\n\n\t      // current state after removal\n\t      var newHead = this.head;\n\t      // list is now empty...adjust tail\n\t      if (!newHead) {\n\t        this.tail = null;\n\t        this.head = this.tail;\n\t      } else {\n\t        // front of list rule\n\t        newHead.prev = null;\n\t      }\n\t    }\n\t    return removedData;\n\t  };\n\n\t  /**\n\t   * Removes the right-most element in the linked list\n\t   * @returns {(*|undefined)} The removed data or undefined if nothing removed\n\t   *\n\t   * @example\n\t   * list.addToBack(\"a\")\n\t   *  .addToBack(\"b\");\n\t   * const removedData = list.removeBack(); // \"b\"\n\t   * // list is now <\"a\">\n\t   */\n\n\n\t  List.prototype.removeBack = function removeBack() {\n\t    var tail = this.tail,\n\t        length = this.length;\n\n\t    var removedData = void 0;\n\t    if (tail) {\n\t      removedData = tail.data;\n\t      var prev = tail.prev;\n\t      this.length = length - 1;\n\t      // list now empty\n\t      if (!prev) {\n\t        this.tail = null;\n\t        this.head = this.tail;\n\t      } else {\n\t        prev.next = null;\n\t        this.tail = prev;\n\t      }\n\t    }\n\t    return removedData;\n\t  };\n\n\t  /**\n\t   * Inserts given data into specific position in the linked list\n\t   * @param {index} index - The index to insert data into\n\t   * @param {*} data - The data to insert into @param index\n\t   * @throws {TypeError} Will throw error if @param index is not number\n\t   * @returns {List} - The instance this method was called\n\t   *\n\t   * @example\n\t   * list.addToBack(\"a\")\n\t   *  .addToBack(\"b\");\n\t   * list.insert(1, \"$\");\n\t   * // list is now <\"a, \"$, \"b\">\n\t   */\n\n\n\t  List.prototype.insert = function insert() {\n\t    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\t    var data = arguments[1];\n\t    var length = this.length;\n\n\t    if (index === 0) {\n\t      return this.addToFront(data);\n\t    } else if (index >= length) {\n\t      return this.addToBack(data);\n\t    }\n\t    // parent of wanted node\n\t    var parentNode = getNode.call(this, index - 1);\n\t    if (parentNode) {\n\t      var newNode = new Node(data);\n\t      var oldParentNext = parentNode.next;\n\t      newNode.next = oldParentNext;\n\t      oldParentNext.prev = newNode;\n\t      parentNode.next = newNode;\n\t      newNode.prev = parentNode;\n\t      this.length = length + 1;\n\t    }\n\t    return this;\n\t  };\n\n\t  /**\n\t   * Removes data at specific position in the linked list\n\t   * @param {index} index - The index to insert data into\n\t   * @throws {TypeError} Will throw error if @param index is not number\n\t   * @returns {(*|undefined)} The removed data or undefined if nothing removed\n\t   *\n\t   * @example\n\t   * list.addToBack(\"a\")\n\t   *  .addToBack(\"b\");\n\t   * list.remove(1);\n\t   * // list is now <\"a\">\n\t   */\n\n\n\t  List.prototype.remove = function remove(index) {\n\t    var length = this.length;\n\n\t    var removedData = void 0;\n\t    if (index === 0) {\n\t      return this.removeFront();\n\t    } else if (index >= length - 1) {\n\t      return this.removeBack();\n\t    }\n\t    // parent of wanted node\n\t    var parentNode = getNode.call(this, index - 1);\n\t    if (parentNode) {\n\t      var toRemove = parentNode.next;\n\t      removedData = toRemove.data;\n\t      var toRemoveNext = toRemove.next;\n\t      parentNode.next = toRemoveNext;\n\t      toRemoveNext.prev = parentNode;\n\t      this.length = length - 1;\n\t    }\n\t    return removedData;\n\t  };\n\n\t  /**\n\t   * Returns the index of the given data in the linked list\n\t   * @param {*} data - The data to find index of\n\t   * @param {function} comparator - function to compare for equality\n\t   * @returns {number} The index of @param data or -1 if not found\n\t   *\n\t   * @example\n\t   * const customComparator = function(a, b) {\n\t   *   if(a.age < b.age) { return -1;}\n\t   *   else if(a.age > b.age) { return 1:}\n\t   *   else { return 0; }\n\t   * }\n\t   * list.addToBack({ age : 2})\n\t   *  .addToBack({ age : 3});\n\t   * list.indexOf({ age : 2}, customComparator) // 0\n\t   */\n\n\n\t  List.prototype.indexOf = function indexOf(data, comparator) {\n\t    var cmp = comparator || _Util.defaultComparator;\n\t    var index = 0;\n\t    var head = this.head;\n\t    while (head) {\n\t      if (cmp(data, head.data) === 0) {\n\t        return index;\n\t      }\n\t      head = head.next;\n\t      index += 1;\n\t    }\n\t    return -1;\n\t  };\n\n\t  /**\n\t   * Returns whether the linked list contains the given data\n\t   * @param {*} data - The data to insert into linked list\n\t   * @param {function} comparator - function to compare for equality\n\t   * @returns {number} The index of @param data or -1 if not found\n\t   */\n\n\n\t  List.prototype.contains = function contains(data, comparator) {\n\t    return this.indexOf(data, comparator) !== -1;\n\t  };\n\n\t  /**\n\t   * Empties the List\n\t   * @returns {undefined}\n\t   */\n\n\n\t  List.prototype.clear = function clear() {\n\t    this.head = null;\n\t    this.tail = null;\n\t    this.length = 0;\n\t  };\n\n\t  /**\n\t   * Returns the size of the List\n\t   * @returns {number} The size of the List\n\t   */\n\n\n\t  List.prototype.size = function size() {\n\t    return this.length;\n\t  };\n\n\t  /**\n\t   * Calls a callback function for each element in the list\n\t   * @param {function} predicate - Function executed for each element\n\t   * (data, index)\n\t   * @returns {List} The instance that this method was called\n\t   */\n\n\n\t  List.prototype.forEach = function forEach(predicate) {\n\t    var head = this.head;\n\t    var index = 0;\n\t    while (head) {\n\t      predicate(head.data, index);\n\t      head = head.next;\n\t      index += 1;\n\t    }\n\t    return this;\n\t  };\n\n\t  /**\n\t   * Returns a new list with only elements that return truthy when passed to the\n\t   * given callback\n\t   * @param {function(data)} predicate - The function used to evaluate elements\n\t   * @returns {List} A new list with filtered elements\n\t   */\n\n\n\t  List.prototype.filter = function filter(predicate) {\n\t    var head = this.head;\n\t    var newList = new List();\n\t    var data = void 0;\n\t    while (head) {\n\t      data = head.data;\n\t      if (predicate(data)) {\n\t        newList.addToBack(data);\n\t      }\n\t      head = head.next;\n\t    }\n\t    return newList;\n\t  };\n\n\t  /**\n\t   * Reports if every element in the list passes a certain condition\n\t   * @param {function(data)} predicate - The function used for evaluations\n\t   * @returns {boolean} True if every element passes the test and false otherwise\n\t   */\n\n\n\t  List.prototype.every = function every(predicate) {\n\t    var head = this.head;\n\t    while (head) {\n\t      if (!predicate(head.data)) {\n\t        return false;\n\t      }\n\t      head = head.next;\n\t    }\n\t    return true;\n\t  };\n\n\t  /**\n\t   * Reports if at least one element in the list passes a certain condition\n\t   * @param {function(data)} predicate - The function used for evaluations\n\t   * @returns {boolean} True if one or more elements passes the test and false otherwise\n\t   */\n\n\n\t  List.prototype.some = function some(predicate) {\n\t    var head = this.head;\n\t    while (head) {\n\t      if (predicate(head.data)) {\n\t        return true;\n\t      }\n\t      head = head.next;\n\t    }\n\t    return false;\n\t  };\n\n\t  /**\n\t   * Transforms a linked list to an array\n\t   * @returns {Array} An array representation of 'this' List\n\t   */\n\n\n\t  List.prototype.toArray = function toArray() {\n\t    var temp = [];\n\t    this.forEach(function (element) {\n\t      return temp.push(element);\n\t    });\n\t    return temp;\n\t  };\n\n\t  return List;\n\t}();\n\n\texports['default'] = List;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\texports.swap = swap;\n\texports.flat = flat;\n\texports.toString = toString;\n\texports.defaultComparator = defaultComparator;\n\texports.isNumber = isNumber;\n\texports.generateRandomInt = generateRandomInt;\n\t/**\n\t * swap method for Structs BHeap and Array\n\t * @private\n\t * @param {Array} array - array to swap certain elements\n\t * @param {number} index1 - index to swap with @param index2\n\t * @param {number} index2 - index to swap with @param index1\n\t * @returns {undefined}\n\t */\n\tfunction swap(array, index1, index2) {\n\t  var oldIndex1 = array[index1];\n\t  array[index1] = array[index2];\n\t  array[index2] = oldIndex1;\n\t}\n\n\t/**\n\t * Makes a 1-D array from an n-D array\n\t * @private\n\t * @param {Array} array - The array to flatten\n\t * @param {res} - The new flattened array\n\t * @returns {undefined}\n\t */\n\tfunction flat(array, res) {\n\t  var newArr = [];\n\t  var curValue = void 0;\n\t  for (var i = 0, len = array.length; i < len; i += 1) {\n\t    curValue = array[i];\n\t    if (Array.isArray(curValue)) {\n\t      flat(curValue, res);\n\t    } else {\n\t      res.push(curValue);\n\t    }\n\t  }\n\t  return newArr;\n\t}\n\n\t/**\n\t * Converts a given value to a string\n\t * @private\n\t * @param {*} value - The value to convert to a string\n\t * @returns {string} @param value to string or stringified by JSON\n\t */\n\tfunction toString(value) {\n\t  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\t  if (type === 'string') {\n\t    return value;\n\t  } else if (type === 'number' || type === 'boolean' || type === 'function') {\n\t    return value.toString();\n\t  }\n\t  return JSON.stringify(value);\n\t}\n\n\t/**\n\t * default comparator for all Collections\n\t * @function defaultComparator\n\t * @param {(number|string)} a - first element to compare\n\t * @param {(number|string)} b - second element to compare\n\t * @returns {number} -1 if a < b, 1 if a > b, and 0 if equal\n\t *\n\t * @example\n\t * function(a, b) {\n\t   if(a < b) {\n\t     return -1;\n\t   } else if(a > b) {\n\t     return 1;\n\t   }\n\t   return 0;\n\t }\n\t */\n\tfunction defaultComparator(a, b) {\n\t  if (a < b) {\n\t    return -1;\n\t  }\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t  return 1;\n\t}\n\n\t/**\n\t * Custom comparator example for all Collections\n\t * @function customComparator\n\t * @param {*} a - first element to compare\n\t * @param {*} b - second element to compare\n\t * @returns {number} -1 if a < b, 1 if a > b, and 0 if equal\n\t *\n\t * @example\n\t * // suppose data is of the form { age : 2 } , { age : 12 }....etc\n\t * function(a, b) {\n\t   if(a.age < b.age) {\n\t     return -1;\n\t   } else if(a.age > b.age) {\n\t     return 1;\n\t   }\n\t   return 0;\n\t }\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tfunction customComparator(a, b) {\n\t  // eslint-disable-line no-unused-vars\n\t  if (a < b) {\n\t    return -1;\n\t  }\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t  return 1;\n\t}\n\n\t/**\n\t * Number.isNaN polyfill from\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference\n\t * /Global_Objects/Number/isFinite\n\t * @private\n\t */\n\tfunction isNumber(value) {\n\t  // eslint-disable-next-line no-restricted-globals\n\t  if (typeof value !== 'number' || !isFinite(value)) {\n\t    throw new TypeError('Argument must be of type number or Number');\n\t  }\n\t}\n\n\t/**\n\t * Generates a random integer between 0 and limit (exclusive)\n\t * @private\n\t * @param {number} limit - Upper bound on random number\n\t * @returns {number} Random number in the range [0, @param limit)\n\t */\n\tfunction generateRandomInt(limit) {\n\t  return Math.floor(Math.random() * limit);\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _List = __webpack_require__(1);\n\n\tvar _List2 = _interopRequireDefault(_List);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Stack representation\n\t * @class\n\t *\n\t * @example\n\t * const stack = new Collections.Stack();\n\t * // FOR ALL EXAMPLES BELOW. ASSUME stack IS CLEARED BEFORE EACH EXAMPLE\n\t */\n\tvar Stack = function () {\n\t  function Stack() {\n\t    _classCallCheck(this, Stack);\n\n\t    this.stack = new _List2['default']();\n\t  }\n\n\t  /**\n\t   * Pushes the given data onto the stack\n\t   * @param {data} data - The data to push onto stack\n\t   * @returns {Stack} The instance this method was called\n\t   *\n\t   * @example\n\t   * stack.push(1).push(2); // <2, 1>\n\t   */\n\n\n\t  Stack.prototype.push = function push(data) {\n\t    this.stack.addToFront(data);\n\t    return this;\n\t  };\n\n\t  /**\n\t   * Removes data from stack in a last in first out manner\n\t   * @returns {*} The reomved data\n\t   *\n\t   * @example\n\t   * stack.push(1).push(2).push(3);\n\t   * stack.pop(); // 3\n\t   */\n\n\n\t  Stack.prototype.pop = function pop() {\n\t    return this.stack.removeFront();\n\t  };\n\n\t  /**\n\t   * Reports but does not remove the staged element to be removed next\n\t   * @returns {*} The element staged to be removed next\n\t   *\n\t   * @example\n\t   * stack.push(1);\n\t   * stack.peek() // returns 1 but does not remove it\n\t   */\n\n\n\t  Stack.prototype.peek = function peek() {\n\t    return this.stack.elementAtIndex(0);\n\t  };\n\n\t  /**\n\t   * Empties the Stack\n\t   * @returns {undefined}\n\t   */\n\n\n\t  Stack.prototype.clear = function clear() {\n\t    return this.stack.clear();\n\t  };\n\n\t  /**\n\t   * Reports the size of the queue\n\t   * @returns {number} The size of the queue\n\t   */\n\n\n\t  Stack.prototype.size = function size() {\n\t    return this.stack.size();\n\t  };\n\n\t  return Stack;\n\t}();\n\n\texports['default'] = Stack;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _List = __webpack_require__(1);\n\n\tvar _List2 = _interopRequireDefault(_List);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Queue Representation\n\t * @class\n\t *\n\t * @example\n\t * const queue = new Collections.Queue();\n\t * // FOR ALL EXAMPLES BELOW. ASSUME queue IS CLEARED BEFORE EACH EXAMPLE\n\t */\n\tvar Queue = function () {\n\t  function Queue() {\n\t    _classCallCheck(this, Queue);\n\n\t    this.queue = new _List2['default']();\n\t  }\n\n\t  /**\n\t   * Inserts given data into queue\n\t   * @param {*} data - The data to insert into queue\n\t   * @returns {Queue} The instance that this method was called\n\t   *\n\t   * @example\n\t   * queue.enqueue(1).enqueue(2);\n\t   *\n\t   */\n\n\n\t  Queue.prototype.enqueue = function enqueue(data) {\n\t    this.queue.addToBack(data);\n\t    return this;\n\t  };\n\n\t  /**\n\t   * Removes from the queue in a first in first out manner\n\t   * @returns {*} The removed data\n\t   * @example\n\t   * queue.enqueue(1).enqueue(2);\n\t   * queue.dequeue() // 1\n\t   */\n\n\n\t  Queue.prototype.dequeue = function dequeue() {\n\t    return this.queue.removeFront();\n\t  };\n\n\t  /**\n\t   * Reports but does not remove the staged element to be removed next\n\t   * @returns {*} Element staged to be removed next\n\t   *\n\t   * @example\n\t   * queue.enqueue(1);\n\t   * queue.peek() // returns 1 but does not remove it\n\t   */\n\n\n\t  Queue.prototype.peek = function peek() {\n\t    return this.queue.elementAtIndex(0);\n\t  };\n\n\t  /**\n\t   * Empties the Queue\n\t   * @returns {undefined}\n\t   */\n\n\n\t  Queue.prototype.clear = function clear() {\n\t    return this.queue.clear();\n\t  };\n\n\t  /**\n\t   * Reports the size of the queue\n\t   * @returns {number} The size of the queue\n\t   */\n\n\n\t  Queue.prototype.size = function size() {\n\t    return this.queue.size();\n\t  };\n\n\t  return Queue;\n\t}();\n\n\texports['default'] = Queue;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _Util = __webpack_require__(2);\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Sifts down (swaps elements downward) the given array\n\t * @private\n\t * @param {Array} array - The array to sift down on.\n\t * @param {number} index - The index to start the sift down operation.\n\t * @param {function} comparator - The comparator to use against parent and\n\t * child elements.\n\t * @returns {undefined}\n\t */\n\tfunction heapify(array, index, comparator) {\n\t  var leftChildIndex = 2 * index;\n\t  var rightChildIndex = 2 * index + 1;\n\t  var numIndicies = array.length - 1;\n\t  var largest = void 0;\n\n\t  if (leftChildIndex <= numIndicies && comparator(array[leftChildIndex], array[index]) === 1) {\n\t    largest = leftChildIndex;\n\t  } else {\n\t    largest = index;\n\t  }\n\n\t  if (rightChildIndex <= numIndicies && comparator(array[rightChildIndex], array[largest]) === 1) {\n\t    largest = rightChildIndex;\n\t  }\n\n\t  if (largest !== index) {\n\t    (0, _Util.swap)(array, index, largest);\n\t    heapify(array, largest, comparator);\n\t  }\n\t}\n\n\t/**\n\t * Sifts up (swaps elements upward) the given array\n\t * @private\n\t * @param {Array} array - The array to sift up on.\n\t * @param {number} index - The index to start the sift up operation.\n\t * @param {function} comparator - The comparator to use against parent\n\t * and child elements\n\t * @returns {undefined}\n\t */\n\tfunction siftUp(array, index, comparator) {\n\t  if (index > 1) {\n\t    var parent = Math.floor(index / 2);\n\t    if (comparator(array[parent], array[index]) === -1) {\n\t      (0, _Util.swap)(array, parent, index);\n\t      siftUp(array, parent, comparator);\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * Binary heap representation\n\t * @class\n\t * @param {function} comparator - @see Global#defaultComp for examples\n\t * @example\n\t * const heap = new Collections.BHeap();\n\t * // this creates a max heap by default.\n\t * // for a min heap, see @link above and swap 1 and -1\n\t * // FOR ALL EXAMPLES BELOW. ASSUME heap IS CLEARED BEFORE EACH EXAMPLE\n\t */\n\n\tvar BHeap = function () {\n\t  function BHeap(comparator) {\n\t    _classCallCheck(this, BHeap);\n\n\t    this.heap = [null];\n\t    this.comparator = comparator || _Util.defaultComparator;\n\t  }\n\n\t  /**\n\t   * Removes the root of the BHeap and returns the data\n\t   * @returns {*} The extracted data\n\t   *\n\t   * @example\n\t   * heap.insert(1).insert(2).insert(3);\n\t   * let root = heap.extractRoot();\n\t   * // root = 3;\n\t   */\n\n\n\t  BHeap.prototype.extractRoot = function extractRoot() {\n\t    var heap = this.heap,\n\t        comparator = this.comparator;\n\n\t    var max = heap[1];\n\t    heap[1] = heap[heap.length - 1];\n\t    heap.length -= 1;\n\t    heapify(heap, 1, comparator);\n\t    return max;\n\t  };\n\n\t  /**\n\t   * Inserts the given data into the BHeap\n\t   * @param {*} [data=null] - The data to insert into BHeap.\n\t   * @returns {BHeap} A reference to the instance that this method was called\n\t   *\n\t   * @example\n\t   * heap.insert(1).insert(2).insert(3).insert(3);\n\t   * // this heap will contain both 3s\n\t   *\n\t   * heap.extractRoot() // will be 3\n\t   */\n\n\n\t  BHeap.prototype.insert = function insert(data) {\n\t    var heap = this.heap,\n\t        comparator = this.comparator;\n\n\t    heap[heap.length] = data;\n\t    siftUp(heap, heap.length - 1, comparator);\n\t    return this;\n\t  };\n\n\t  /**\n\t   * Reports whether the BHeap contains the given data\n\t   * @param {*} [data=null] - The data to search for\n\t   * @returns {boolean} True if the heap contains @param data and false otherwise\n\t   *\n\t   * @example\n\t   * heap.insert(1).insert(2);\n\t   * heap.contains(2) // true\n\t   */\n\n\n\t  BHeap.prototype.contains = function contains(data) {\n\t    return this.toArray().indexOf(data) !== -1;\n\t  };\n\n\t  /**\n\t   * Retrieves the element staged to be removed next but does not remove it\n\t   * @returns {* | undefined} The set to be removed data or undefined if empty heap\n\t   *\n\t   * @example\n\t   * heap.insert(9);\n\t   * heap.peek() // returns 9 and heap is still of size 1\n\t   */\n\n\n\t  BHeap.prototype.peek = function peek() {\n\t    return this.heap[1];\n\t  };\n\n\t  /**\n\t   * Transforms the BHeap into an array\n\t   * @returns {Array} The heap instance as an array\n\t   *\n\t   * @example\n\t   * heap.insert(1).insert(2);\n\t   * heap.toArray() // will be [2, 1]\n\t   */\n\n\n\t  BHeap.prototype.toArray = function toArray() {\n\t    return this.heap.slice(1);\n\t  };\n\n\t  /**\n\t   * Reports the number of elements in the BHeap.\n\t   * @returns The BHeap instance's number of elements\n\t   *\n\t   * @example\n\t   * heap.size() // would be 0\n\t   */\n\n\n\t  BHeap.prototype.size = function size() {\n\t    return this.heap.length - 1;\n\t  };\n\n\t  /**\n\t   * Empties the Heap\n\t   * @returns {undefined}\n\t   */\n\n\n\t  BHeap.prototype.clear = function clear() {\n\t    this.heap.length = 1;\n\t  };\n\n\t  return BHeap;\n\t}();\n\n\texports['default'] = BHeap;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _BHeap = __webpack_require__(5);\n\n\tvar _BHeap2 = _interopRequireDefault(_BHeap);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Custom comparator for min heap\n\t * @private\n\t * @param {valueA} objectA - First value to compare\n\t * @param {valueB} objectB- Second value to compare\n\t * @returns {number} 1 if @param objectA's priority is less than\n\t * objectB's priority, -1 if opposite and 0 if the two priorities are equal.\n\t */\n\tfunction minHeapComparator(objectA, objectB) {\n\t  if (objectA.priority < objectB.priority) {\n\t    return 1;\n\t  }\n\t  if (objectA.priority === objectB.priority) {\n\t    return 0;\n\t  }\n\t  return -1;\n\t}\n\n\t/**\n\t * Priority Queue Representation\n\t * @class\n\t *\n\t * @example\n\t * const pq = new Collections.PriorityQueue();\n\t * // FOR ALL EXAMPLES BELOW. ASSUME pq IS CLEARED BEFORE EACH EXAMPLE\n\t */\n\n\tvar PriorityQueue = function () {\n\t  function PriorityQueue() {\n\t    _classCallCheck(this, PriorityQueue);\n\n\t    this.queue = new _BHeap2['default'](minHeapComparator);\n\t  }\n\n\t  /**\n\t   * Inserts given data into queue with a certain priority\n\t   * Lower numbers are removed from queue first.\n\t   * @param {number} data - The data to queue\n\t   * @param {priority} priority - The relative Importance of @param data\n\t   * to othe data in the queue\n\t   *\n\t   * @example\n\t   * pq.enqueue(\"wakeup\", 1);\n\t   * pq.enqueue(\"wash dishes\", 2);\n\t   *\n\t   */\n\n\n\t  PriorityQueue.prototype.enqueue = function enqueue(data, priority) {\n\t    return this.queue.insert({ data: data, priority: priority });\n\t  };\n\n\t  /**\n\t   * Removes The element with the lowest priority from the queue\n\t   * @returns {*} The element with the lowest priority in the queue\n\t   * pq.dequeue()\n\t   * // from the example above, this operation returns \"wakeup\", then\n\t   * \"wash dishes\" on second dequeue\n\t   */\n\n\n\t  PriorityQueue.prototype.dequeue = function dequeue() {\n\t    var queue = this.queue;\n\n\t    return queue.extractRoot().data;\n\t  };\n\n\t  /**\n\t   * Reports the size of the priorityqueue\n\t   * @returns {number} The size of the queue\n\t   */\n\n\n\t  PriorityQueue.prototype.size = function size() {\n\t    return this.queue.size();\n\t  };\n\n\t  /**\n\t   * Removes all elements from the PriorityQueue\n\t   * @returns {undefined}\n\t   */\n\n\n\t  PriorityQueue.prototype.clear = function clear() {\n\t    return this.queue.clear();\n\t  };\n\n\t  return PriorityQueue;\n\t}();\n\n\texports['default'] = PriorityQueue;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _HashTable = __webpack_require__(8);\n\n\tvar _HashTable2 = _interopRequireDefault(_HashTable);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * HashMap representation\n\t * @class\n\t * @implements MapInterface\n\t * @param {number} [initialCapacity=13] - Initial size of the hashmap\n\t * IMPORTANT : It is not recommended that you choose a size that will be a\n\t * close or approximate upper bound on your data, so that number\n\t * of rehashes of the inner hashtable will be small. For example, if\n\t * you know you only need 100,000 inserts, a good initial capacity would not be\n\t * approximately 100,000 as the inner hastable will resize once 75,000\n\t * (75% of size) to 75,000 * 2 = 150,000. Next resize will be 0.75 * 150,000\n\t * which is 112,500 , greater than your space needed.\n\t * So, try something around 150,000. Or you can just rehash a lot :)\n\t *\n\t * @example\n\t * const map = new Collections.HashMap(37);\n\t */\n\tvar HashMap = function () {\n\t  function HashMap(initialCapacity) {\n\t    _classCallCheck(this, HashMap);\n\n\t    this.map = new _HashTable2['default'](initialCapacity);\n\t  }\n\n\t  HashMap.prototype.put = function put(key, value) {\n\t    var self = this;\n\t    self.map.put(key, value);\n\t    return self;\n\t  };\n\n\t  HashMap.prototype.getVal = function getVal(key) {\n\t    return this.map.getVal(key);\n\t  };\n\n\t  HashMap.prototype.clear = function clear() {\n\t    return this.map.clear();\n\t  };\n\n\t  HashMap.prototype.remove = function remove(key) {\n\t    return this.map.remove(key);\n\t  };\n\n\t  HashMap.prototype.keys = function keys() {\n\t    return this.map.keys();\n\t  };\n\n\t  HashMap.prototype.values = function values() {\n\t    return this.map.values();\n\t  };\n\n\t  HashMap.prototype.contains = function contains(key) {\n\t    return this.map.contains(key);\n\t  };\n\n\t  HashMap.prototype.size = function size() {\n\t    return this.map.size();\n\t  };\n\n\t  return HashMap;\n\t}();\n\n\texports['default'] = HashMap;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\tvar _Util = __webpack_require__(2);\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * From immutable.js implementation of java hashcode\n\t * https://github.com/facebook/immutable-js/blob/master/src/Hash.js\n\t *\n\t * Returns the hashcode for the given string\n\t * @private\n\t * @param {string} str - The string to hash\n\t * @returns {number} @param str's hashcode\n\t */\n\tfunction hashString(string) {\n\t  var hash = 0;\n\t  for (var i = 0, len = string.length; i < len; i += 1) {\n\t    hash = 31 * hash + string.charCodeAt(i) | 0;\n\t  }\n\t  return hash;\n\t}\n\n\t/**\n\t * Returns the modulo of two numbers\n\t * @private\n\t * @param {number} dividend - The dividend\n\t * @param {number} divisor - The divisor\n\t * @returns {number} Positive number when (dividend mod divisor) is calculated\n\t */\n\tfunction mod(dividend, divisor) {\n\t  var modulo = dividend % divisor;\n\t  return dividend < 0 ? modulo * -1 : modulo;\n\t}\n\n\t/**\n\t * Creates a 2 dimensional array of the given size\n\t * @private\n\t * @param {number} size - The size of the 2d array\n\t * @returns {Array} A 1d array with @param size inner arrays\n\t */\n\tfunction createTable(size) {\n\t  var newTable = [];\n\t  for (var i = 0; i < size; i += 1) {\n\t    newTable.push([]);\n\t  }\n\t  return newTable;\n\t}\n\n\t/**\n\t * Gets the proper index the given key should be hashed to in the given array\n\t * @private\n\t * @param {*} key - The key\n\t * @param {Array} Associative Array\n\t * @returns {number} The index that @param key hashes to\n\t */\n\tfunction getLocationInTable(key, table) {\n\t  var keyHash = hashString((0, _Util.toString)(key) + (typeof key === 'undefined' ? 'undefined' : _typeof(key)));\n\t  return mod(keyHash, table.length);\n\t}\n\n\t/**\n\t * Inserts into an Associative Array based on the hashcode of the given key\n\t * @private\n\t * @param {*} key - The key\n\t * @param {*} value - The value mapped to by @param key\n\t * @param {Array} table - Associative Array\n\t * @returns {number} 1 for true\n\t */\n\tfunction insert(key, value, table) {\n\t  var location = getLocationInTable(key, table);\n\t  var bucket = table[location];\n\t  return bucket.push(key, value);\n\t}\n\n\t/**\n\t * Gets the keys or the values in the given table\n\t * @private\n\t * @param {string} query - The partial of the pair wanted either key or value\n\t * @param {Array} table - The associative array\n\t * @returns {Array} Array filled with keys or values\n\t */\n\tfunction getKeysOrValues(query, table) {\n\t  var start = query === 'keys' ? 0 : 1;\n\t  var result = [];\n\t  var tableLen = table.length;\n\t  for (var i = 0; i < tableLen; i += 1) {\n\t    var currentBucket = table[i];\n\t    for (var j = start; j < currentBucket.length; j += 2) {\n\t      result.push(currentBucket[j]);\n\t    }\n\t  }\n\t  return result;\n\t}\n\n\t/**\n\t * Searches an Associative Array based on the hashcode of the given key\n\t * @private\n\t * @param {*} key - The key to look for\n\t * @param {Array} table - Associative Array\n\t * @returns {Object} Object literal with the bucket where @param key is found\n\t * and the index of @param key in that bucket or undefined and -1 if not found\n\t */\n\tfunction search(key, table) {\n\t  var location = getLocationInTable(key, table);\n\t  var bucket = table[location];\n\t  // skip values [k1, v1, k2, v2]\n\t  for (var index = 0; index < bucket.length; index += 2) {\n\t    if (key === bucket[index]) {\n\t      return { bucket: bucket, index: index };\n\t    }\n\t  }\n\t  return { bucket: undefined, index: -1 };\n\t}\n\n\t/**\n\t * Figures out if the given Associative Array should grow larger\n\t * @private\n\t * @param {number} inserts - The number of items in the table\n\t * @param {Array} table - Associative Array\n\t * @returns {boolean} True if @param table should rehash and false otherwise\n\t */\n\tfunction shouldRehash(inserts, table) {\n\t  var load = inserts / table.length;\n\t  return load >= 0.75 ? true : false;\n\t}\n\n\t/**\n\t * HashTable representation\n\t * @class\n\t * @private\n\t * @implements MapInterface\n\t * @param {number} [initialCapacity=13] - Initial size of the hashtable\n\t * IMPORTANT : It is not recommended that you choose a size that will be a\n\t * close or approximate upper bound on your data, so that number\n\t * of rehashes of the hashtable will be small. For example, if\n\t * you know you only need 100,000 inserts, a good initial capacity would not be\n\t * approximately 100,000 as the hastable will resize once 75,000\n\t * (75% of size) to 75,000 * 2 = 150,000. Next resize will be 0.75 * 150,000\n\t * which is 112,500 , greater than your space needed.\n\t */\n\n\tvar HashTable = function () {\n\t  function HashTable() {\n\t    var initialCapacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 13;\n\n\t    _classCallCheck(this, HashTable);\n\n\t    this.inserts = 0;\n\t    this.table = createTable(initialCapacity);\n\t  }\n\n\t  HashTable.prototype.put = function put() {\n\t    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t    var self = this;\n\t    var table = self.table,\n\t        inserts = self.inserts;\n\n\t    var searchResult = search(key, table);\n\t    var bucket = searchResult.bucket,\n\t        index = searchResult.index;\n\n\t    if (index === -1) {\n\t      insert(key, value, table);\n\t      self.inserts += 1;\n\t      if (shouldRehash(inserts + 1, table)) {\n\t        self.rehash();\n\t      }\n\t    } else {\n\t      bucket[index + 1] = value;\n\t    }\n\t    return self;\n\t  };\n\n\t  HashTable.prototype.getVal = function getVal(key) {\n\t    var searchResult = search(key, this.table);\n\t    var bucket = searchResult.bucket,\n\t        index = searchResult.index;\n\n\t    return index !== -1 ? bucket[index + 1] : undefined;\n\t  };\n\n\t  HashTable.prototype.remove = function remove(key) {\n\t    var self = this;\n\t    var searchResult = search(key, self.table);\n\t    var bucket = searchResult.bucket,\n\t        index = searchResult.index;\n\n\t    if (index !== -1) {\n\t      self.inserts -= 1;\n\t      bucket.splice(index, 2);\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\n\t  HashTable.prototype.contains = function contains(key) {\n\t    return this.getVal(key) !== undefined;\n\t  };\n\n\t  /**\n\t   * Resizes (2x) and rehashes all keys in HashTable\n\t   * @returns {undefined}\n\t   */\n\n\n\t  HashTable.prototype.rehash = function rehash() {\n\t    var oldTable = this.table;\n\t    var newTable = createTable(oldTable.length * 2);\n\t    var oldLen = oldTable.length;\n\n\t    for (var i = 0; i < oldLen; i += 1) {\n\t      var currentBucket = oldTable[i];\n\t      for (var j = 0; j < currentBucket.length; j += 2) {\n\t        var oldKey = currentBucket[j];\n\t        var oldValue = currentBucket[j + 1];\n\t        insert(oldKey, oldValue, newTable);\n\t      }\n\t    }\n\t    oldTable.length = 0;\n\t    this.table = newTable;\n\t  };\n\n\t  HashTable.prototype.keys = function keys() {\n\t    return getKeysOrValues('keys', this.table);\n\t  };\n\n\t  HashTable.prototype.values = function values() {\n\t    return getKeysOrValues('values', this.table);\n\t  };\n\n\t  /**\n\t   * Returns the number of buckets in the Associative Array\n\t   * @returns {number} Size of inner Associative Array\n\t   */\n\n\n\t  HashTable.prototype.tableSize = function tableSize() {\n\t    return this.table.length;\n\t  };\n\n\t  HashTable.prototype.clear = function clear() {\n\t    var self = this;\n\t    self.table.length = 0;\n\t    self.inserts = 0;\n\t    self.table = createTable(13);\n\t  };\n\n\t  HashTable.prototype.size = function size() {\n\t    return this.inserts;\n\t  };\n\n\t  return HashTable;\n\t}();\n\n\texports['default'] = HashTable;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _HashTable = __webpack_require__(8);\n\n\tvar _HashTable2 = _interopRequireDefault(_HashTable);\n\n\tvar _SetInterface2 = __webpack_require__(10);\n\n\tvar _SetInterface3 = _interopRequireDefault(_SetInterface2);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? _defaults(subClass, superClass) : _defaults(subClass, superClass); }\n\n\t/**\n\t * HashSet representation\n\t * @class\n\t * @implements {SetInterface}\n\t * @param {number} [initialCapacity=13] - The initial size of the hashset\n\t *\n\t * @example\n\t * const set = new Collections.HashSet();\n\t */\n\tvar HashSet = function (_SetInterface) {\n\t  _inherits(HashSet, _SetInterface);\n\n\t  function HashSet(initialCapacity) {\n\t    _classCallCheck(this, HashSet);\n\n\t    var _this = _possibleConstructorReturn(this, _SetInterface.call(this));\n\n\t    _this.set = new _HashTable2['default'](initialCapacity);\n\t    return _this;\n\t  }\n\n\t  HashSet.prototype.add = function add(element) {\n\t    this.set.put(element, 1);\n\t    return this;\n\t  };\n\n\t  HashSet.prototype.has = function has(element) {\n\t    return this.set.contains(element);\n\t  };\n\n\t  HashSet.prototype.remove = function remove(element) {\n\t    this.set.remove(element);\n\t    return this;\n\t  };\n\n\t  HashSet.prototype.entries = function entries() {\n\t    return this.set.keys();\n\t  };\n\n\t  HashSet.prototype.cardinality = function cardinality() {\n\t    return this.set.size();\n\t  };\n\n\t  HashSet.prototype.union = function union(thatSet) {\n\t    return _SetInterface.prototype.union.call(this, thatSet);\n\t  };\n\n\t  HashSet.prototype.diff = function diff(thatSet) {\n\t    return _SetInterface.prototype.diff.call(this, thatSet);\n\t  };\n\n\t  HashSet.prototype.intersect = function intersect(thatSet) {\n\t    return _SetInterface.prototype.intersect.call(this, thatSet);\n\t  };\n\n\t  return HashSet;\n\t}(_SetInterface3['default']);\n\n\texports['default'] = HashSet;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Collection of elements that contain no duplicates\n\t *\n\t * @interface\n\t *\n\t */\n\tvar SetInterface = function () {\n\t  function SetInterface() {\n\t    _classCallCheck(this, SetInterface);\n\t  }\n\n\t  /**\n\t   * Adds an element to the set if already in set\n\t   * @param {*} element - The element to add to the set\n\t   * @returns {Set} The instance that this method was called\n\t   *\n\t   * @example\n\t   * set.add(1);\n\t   * set.add(2);\n\t   * set.add(1);\n\t   * // set contains [1, 2] order might not be guareenteed\n\t   */\n\n\n\t  SetInterface.prototype.add = function add(element) {};\n\n\t  /**\n\t   * Returns the set difference (not symmetric) of 'this' set and\n\t   * another set x such that x is in A and x is not in B, where A and B\n\t   * are two sets\n\t   * @param {Set} thatSet - another set instance\n\t   * @returns {Array} The difference of this and @param thatSet\n\t   *\n\t   * @example\n\t   * set.add(1);\n\t   * set.add(2);\n\t   * set2 = new <Another Set>\n\t   * set2.add(2);\n\t   * set.diff(set2); // [1]\n\t   */\n\n\n\t  SetInterface.prototype.diff = function diff(thatSet) {\n\t    var thisKeys = this.entries();\n\t    var result = [];\n\t    var thisLen = thisKeys.length;\n\t    var curElement = void 0;\n\t    for (var i = 0; i < thisLen; i += 1) {\n\t      curElement = thisKeys[i];\n\t      if (!thatSet.has(curElement)) {\n\t        result.push(curElement);\n\t      }\n\t    }\n\t    return result;\n\t  };\n\n\t  /**\n\t   * Returns the mathematical set union of 'this' set and\n\t   * another set\n\t   * @param {Set} thatSet - another set instance\n\t   * @returns {Array} An array containing the union of this and @param thatSet\n\t   *\n\t   * @example\n\t   * set.add(1);\n\t   * set.add(2);\n\t   * set2 = new <Another Set>\n\t   * set2.add(2);\n\t   * set.union(set2); // [1, 2]\n\t   */\n\n\n\t  SetInterface.prototype.union = function union(thatSet) {\n\t    var thatKeys = thatSet.entries();\n\t    var self = this;\n\t    var thisKeys = self.entries();\n\t    var curElement = void 0;\n\t    var thatLen = thatKeys.length;\n\t    for (var i = 0; i < thatLen; i += 1) {\n\t      curElement = thatKeys[i];\n\t      if (!self.has(curElement)) {\n\t        thisKeys.push(curElement);\n\t      }\n\t    }\n\t    return thisKeys;\n\t  };\n\n\t  /**\n\t   * Reports whether the set contains a given value\n\t   * @param {*} element - The element to find\n\t   * @returns {boolean} True if set contains @param element and false otherwise\n\t   *\n\t   * @example\n\t   * set.add(1);\n\t   * set.add(2);\n\t   * set.has(3); // false\n\t   */\n\n\n\t  SetInterface.prototype.has = function has(element) {};\n\n\t  /**\n\t   * Returns all elements in the set\n\t   * @returns {Array} Array with all elements in the set\n\t   */\n\n\n\t  SetInterface.prototype.entries = function entries() {};\n\n\t  /**\n\t   * Removes an element from the set\n\t   * @returns {Set} the instance that this method was called\n\t   */\n\n\n\t  SetInterface.prototype.remove = function remove(element) {};\n\n\t  /**\n\t   * Returns the mathematical set intersection of 'this' set and\n\t   * another set\n\t   * @param {Set} thatSet - another Set instance\n\t   * @returns {Array} The array containing the set intersection of this and\n\t   * @param thatSet\n\t   *\n\t   * @example\n\t   * set.add(1);\n\t   * set.add(2);\n\t   * set2 = new Collections.HashSet();\n\t   * set2.add(2);\n\t   * set.intersect(set2); // [2]\n\t   */\n\n\n\t  SetInterface.prototype.intersect = function intersect(thatSet) {\n\t    var largerSet = void 0,\n\t        smallerSet = void 0;\n\t    var self = this;\n\t    var result = [];\n\t    if (self.cardinality() > thatSet.cardinality()) {\n\t      largerSet = self;\n\t      smallerSet = thatSet.entries();\n\t    } else {\n\t      largerSet = thatSet;\n\t      smallerSet = self.entries();\n\t    }\n\t    var smallLen = smallerSet.length;\n\t    var curElement = void 0;\n\t    for (var i = 0; i < smallLen; i += 1) {\n\t      curElement = smallerSet[i];\n\t      if (largerSet.has(curElement)) {\n\t        result.push(curElement);\n\t      }\n\t    }\n\t    return result;\n\t  };\n\n\t  /**\n\t   * Returns the number of elements in the set\n\t   *\n\t   * @example\n\t   * set.add(1);\n\t   * set.add(2);\n\t   * set.cardinality() ; // 2\n\t   */\n\n\n\t  SetInterface.prototype.cardinality = function cardinality() {};\n\n\t  return SetInterface;\n\t}();\n\n\texports[\"default\"] = SetInterface;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _BSTNode = __webpack_require__(12);\n\n\tvar _BSTNode2 = _interopRequireDefault(_BSTNode);\n\n\tvar _BSTPrototype = __webpack_require__(13);\n\n\tvar _Util = __webpack_require__(2);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Binary search tree representation\n\t * @class\n\t * @implements {MapInterface}\n\t * @param {function} comparator - @see Global#defaultComp for examples\n\t * @example\n\t * const bst = new Collections.BST();\n\t * // FOR ALL EXAMPLES BELOW. ASSUME bst IS CLEARED BEFORE EACH EXAMPLE\n\t */\n\tvar BST = function () {\n\t  function BST(comparator) {\n\t    _classCallCheck(this, BST);\n\n\t    this.root = new _BSTNode2['default']();\n\t    this.comparator = comparator || _Util.defaultComparator;\n\t    this.inserts = 0;\n\t  }\n\n\t  /**\n\t   * puts the given key and value into the BST\n\t   * @param {*} [key=null] - The key to insert into the BST\n\t   * @param {*} [value=null] - The value that is mapped to by @param key\n\t   * @returns {BST} The instance that this method was called with\n\t   *\n\t   * @example\n\t   * bst.put(\"ed\", \"jones\").put(\"george\", \"james\").put(\"ed\", \"kane\");\n\t   * // ed now maps to kane because ed already existed before.\n\t   */\n\n\n\t  BST.prototype.put = function put() {\n\t    var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t    var self = this;\n\t    var inserted = _BSTPrototype.BSTInsert.call(self, key, value, _BSTNode2['default']);\n\t    if (inserted) {\n\t      self.inserts += 1;\n\t    }\n\t    return self;\n\t  };\n\n\t  /**\n\t   * Removes the given key and its associated value from the BST\n\t   * @param {*} key - The key to search fo\n\t   * @returns {boolean} True if the key existed before and false otherwise\n\t   *\n\t   * @example\n\t   * bst.put(1, 5).put(5, 10);\n\t   * bst.remove(1); // 1 and it's associated value are removed from BST\n\t   * bst.remove(\"dog\");// this call fails silently as dog never existed in BST\n\t   */\n\n\n\t  BST.prototype.remove = function remove(key) {\n\t    var self = this;\n\t    var removed = _BSTPrototype.BSTRemove.call(self, key);\n\t    if (removed) {\n\t      self.inserts -= 1;\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\n\t  /**\n\t   * Finds the value associated with the given key\n\t   * @param {*} key - The key to search for in the BST\n\t   * @returns {(*|undefined)} The value associated with @param key or undefined\n\t   * if not found.\n\t   *\n\t   * @example\n\t   * bst.put(1, 5).put(5, 10);\n\t   * bst.find(5); // returns 10\n\t   * bst.find(67); // returns undefined\n\t   */\n\n\n\t  BST.prototype.getVal = function getVal(key) {\n\t    var self = this;\n\t    var node = _BSTPrototype.BSTSearch.call(self, self.root, key);\n\t    return node ? node.value : undefined;\n\t  };\n\n\t  /**\n\t   * Determines if the BST contains the given key\n\t   * @param {*} key - The key to search for\n\t   * @returns {boolean} True if the BST contains @param key and false otherwise\n\t   *\n\t   * @example\n\t   * bst.put(1, 5).put(5, 10);\n\t   * bst.contains(5); // returns true\n\t   * bst.contains(67); // returns false\n\t   */\n\n\n\t  BST.prototype.contains = function contains(key) {\n\t    return this.getVal(key) !== undefined;\n\t  };\n\n\t  /**\n\t   * Gives the inorder traversal of the BST\n\t   * @returns {Array} Array of objects representing the BST\n\t   */\n\n\n\t  BST.prototype.inorder = function inorder() {\n\t    var result = [];\n\t    (0, _BSTPrototype.BSTInorder)(this.root, result);\n\t    return result;\n\t  };\n\n\t  /**\n\t   * Returns the smallest value in the BST according to it's ordering function\n\t   * @returns {*} The smallest value in the BST\n\t   */\n\n\n\t  BST.prototype.min = function min() {\n\t    return (0, _BSTPrototype.minOrMax)('min', this.root);\n\t  };\n\n\t  /**\n\t   * Returns the greatest value in the tree according to it's ordering function\n\t   * @returns {*} The greatest value in the BST\n\t   */\n\n\n\t  BST.prototype.max = function max() {\n\t    return (0, _BSTPrototype.minOrMax)('max', this.root);\n\t  };\n\n\t  /**\n\t   * Returns all keys less than the given key in the BST\n\t   * @param {*} value - The value used as the upper bound\n\t   * @returns {Array} Array of keys less than @param key\n\t   */\n\n\n\t  BST.prototype.keysLess = function keysLess(value) {\n\t    var self = this;\n\t    var result = [];\n\t    (0, _BSTPrototype.less)(self.root, value, self.comparator, result);\n\t    return result;\n\t  };\n\n\t  /**\n\t   * Returns all keys greater than the given key in the BST\n\t   * @param {*} value - The value used as the lower bound\n\t   * @returns {Array} Array of keys greater than @param key\n\t   */\n\n\n\t  BST.prototype.keysGreater = function keysGreater(value) {\n\t    var self = this;\n\t    var result = [];\n\t    (0, _BSTPrototype.greater)(self.root, value, self.comparator, result);\n\t    return result;\n\t  };\n\n\t  /**\n\t   * Empties the BST\n\t   * @returns {undefined}\n\t   */\n\n\n\t  BST.prototype.clear = function clear() {\n\t    this.root = null;\n\t    this.inserts = 0;\n\t  };\n\n\t  /**\n\t   * Reports the number of elements in the BST\n\t   * @returns {number} Number of elements in the BST\n\t   */\n\n\n\t  BST.prototype.size = function size() {\n\t    return this.inserts;\n\t  };\n\n\t  /**\n\t   * Gives the keys in the BST\n\t   * @returns {Array} The key set\n\t   */\n\n\n\t  BST.prototype.keys = function keys() {\n\t    var result = [];\n\t    (0, _BSTPrototype.getKeysOrValues)(this.root, 'key', result);\n\t    return result;\n\t  };\n\n\t  /**\n\t   * Gives the values in the BST\n\t   * @returns {Array} The value set\n\t   */\n\n\n\t  BST.prototype.values = function values() {\n\t    var result = [];\n\t    (0, _BSTPrototype.getKeysOrValues)(this.root, 'value', result);\n\t    return result;\n\t  };\n\n\t  /**\n\t   * Returns an array of all keys in the given range\n\t   * @param {*} lower - The lower bound\n\t   * @param {*} upper - The upper bound\n\t   * @returns {Array} An array containing the keyRange [lower, upper]\n\t   */\n\n\n\t  BST.prototype.keyRange = function keyRange(lower, upper) {\n\t    var self = this;\n\t    if (lower === undefined || upper === undefined) {\n\t      throw new TypeError('Both a lower and upper bound are required');\n\t    }\n\t    if (self.comparator(lower, upper) !== -1) {\n\t      throw new RangeError('Lower bound must be strictly less than upper bound');\n\t    }\n\t    var res = [];\n\t    (0, _BSTPrototype.keysBetween)(self.root, lower, upper, self.comparator, res);\n\t    return res;\n\t  };\n\n\t  return BST;\n\t}();\n\n\texports['default'] = BST;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\texports.__esModule = true;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar BSTNode = function () {\n\t  function BSTNode(key, value) {\n\t    _classCallCheck(this, BSTNode);\n\n\t    this.parent = null;\n\t    this.left = null;\n\t    this.right = null;\n\t    this.key = key;\n\t    this.value = value;\n\t  }\n\n\t  BSTNode.prototype.isNil = function isNil() {\n\t    return this.key === undefined;\n\t  };\n\n\t  BSTNode.prototype.isLeftChild = function isLeftChild() {\n\t    return this.parent.left === this;\n\t  };\n\n\t  BSTNode.prototype.hasLeftChild = function hasLeftChild() {\n\t    return this.left.key !== undefined;\n\t  };\n\n\t  BSTNode.prototype.hasRightChild = function hasRightChild() {\n\t    return this.right.key !== undefined;\n\t  };\n\n\t  BSTNode.prototype.isRightChild = function isRightChild() {\n\t    return this.parent.right === this;\n\t  };\n\n\t  return BSTNode;\n\t}();\n\n\texports[\"default\"] = BSTNode;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\texports.BSTInsert = BSTInsert;\n\texports.BSTSearch = BSTSearch;\n\texports.BSTRemove = BSTRemove;\n\texports.BSTInorder = BSTInorder;\n\texports.getKeysOrValues = getKeysOrValues;\n\texports.less = less;\n\texports.greater = greater;\n\texports.minOrMax = minOrMax;\n\texports.keysBetween = keysBetween;\n\t/**\n\t * Adjusts references for parent and child post insert\n\t * @private\n\t */\n\tfunction adjustParentAndChildrenOfNewNode(newNode, oldRoot, comparator, NodeType) {\n\t  newNode.parent = oldRoot;\n\t  if (oldRoot.isNil()) {\n\t    this.root = newNode;\n\t  } else if (comparator(newNode.key, oldRoot.key) === -1) {\n\t    oldRoot.left = newNode;\n\t  } else {\n\t    oldRoot.right = newNode;\n\t  }\n\t  newNode.left = new NodeType();\n\t  newNode.right = new NodeType();\n\t}\n\t/**\n\t * Inserts the given key and value into bst (maps key to value)\n\t * @private\n\t * @param {*} key - The key to insert into the bst\n\t * @param {*} value - The value that is mapped to by @param key\n\t * @param {BSTNode} Node - The Node type to insert into the tree\n\t * @returns {(BSTNode|undefined)} undefined if the node was already in tree,\n\t * thus not inserted or the new node that was just inserted successfully.\n\t */\n\tfunction BSTInsert(key, value, NodeType) {\n\t  var comparator = this.comparator;\n\t  var root = this.root;\n\t  var newNode = new NodeType(key, value);\n\t  var oldRoot = new NodeType();\n\t  while (!root.isNil()) {\n\t    var comparatorResult = comparator(newNode.key, root.key);\n\t    oldRoot = root;\n\t    if (comparatorResult === -1) {\n\t      root = root.left;\n\t    } else if (comparatorResult === 1) {\n\t      root = root.right;\n\t    } else {\n\t      root.value = value;\n\t      return;\n\t    }\n\t  }\n\t  adjustParentAndChildrenOfNewNode.call(this, newNode, oldRoot, comparator, NodeType);\n\t  return newNode;\n\t}\n\n\t/**\n\t * Searches for the given key in tree\n\t * @private\n\t * @param {BSTNode} root - The root node to start search\n\t * @param {*} key - The key to search for in bst\n\t * @returns {(undefined|BSTNode)} undefined if not found. Or the actual node if found\n\t */\n\tfunction BSTSearch(root, key) {\n\t  var currentRoot = root;\n\t  var comparator = this.comparator;\n\t  while (!currentRoot.isNil()) {\n\t    var comparatorResult = comparator(currentRoot.key, key);\n\t    if (comparatorResult === 0) {\n\t      return currentRoot;\n\t    } else if (comparatorResult === -1) {\n\t      currentRoot = currentRoot.right;\n\t    } else {\n\t      currentRoot = currentRoot.left;\n\t    }\n\t  }\n\t}\n\n\t/**\n\t * Finds the inorder successor of the given node that has 2 children\n\t * @private\n\t * @param {BSTNode} node - The Node to find the successor for\n\t * @returns {BSTNode} The inorder successor of @param node\n\t */\n\tfunction successor(node) {\n\t  var nodeSuccessor = node.right;\n\t  while (nodeSuccessor.hasLeftChild()) {\n\t    nodeSuccessor = nodeSuccessor.left;\n\t  }\n\t  return nodeSuccessor;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tfunction swapPropsWithSucccessor(nodeSuccessor, node) {\n\t  if (nodeSuccessor !== node) {\n\t    node.key = nodeSuccessor.key;\n\t    node.value = nodeSuccessor.value;\n\t  }\n\t}\n\t/**\n\t * Searches for a node with given key and removes it from tree\n\t * @private\n\t * @param {*} key - The key to search for in the tree\n\t * @returns {boolean|BSTNode} Returns false if node doesn't exist with @param key\n\t * or the successor and successor child of the node to remove\n\t */\n\tfunction BSTRemove(key) {\n\t  var node = BSTSearch.call(this, this.root, key);\n\t  if (!node) {\n\t    return false;\n\t  }\n\t  var nodeSuccessor = void 0;\n\t  var successorChild = void 0;\n\t  if (!node.hasLeftChild() || !node.hasRightChild()) {\n\t    nodeSuccessor = node;\n\t  } else {\n\t    nodeSuccessor = successor(node);\n\t  }\n\t  if (nodeSuccessor.hasLeftChild()) {\n\t    successorChild = nodeSuccessor.left;\n\t  } else {\n\t    successorChild = nodeSuccessor.right;\n\t  }\n\t  successorChild.parent = nodeSuccessor.parent;\n\t  if (nodeSuccessor.parent.isNil()) {\n\t    this.root = successorChild;\n\t  } else if (nodeSuccessor.isLeftChild()) {\n\t    nodeSuccessor.parent.left = successorChild;\n\t  } else {\n\t    nodeSuccessor.parent.right = successorChild;\n\t  }\n\t  swapPropsWithSucccessor(nodeSuccessor, node);\n\t  return { successorChild: successorChild, nodeSuccessor: nodeSuccessor };\n\t}\n\n\t/**\n\t * Gets the inorder traversal starting at given root\n\t * @private\n\t * @param {BSTNode} root - The root of tree\n\t * @param {string} propWanted - The property of each node wanted\n\t * @param {Array} array - The Array to be updated with the result\n\t * @returns {undefined}\n\t */\n\tfunction BSTInorder(root, array) {\n\t  if (root && !root.isNil()) {\n\t    BSTInorder(root.left, array);\n\t    array.push(root);\n\t    BSTInorder(root.right, array);\n\t  }\n\t}\n\n\tfunction getKeysOrValues(root, prop, array) {\n\t  if (root && !root.isNil()) {\n\t    getKeysOrValues(root.left, prop, array);\n\t    array.push(root[prop]);\n\t    getKeysOrValues(root.right, prop, array);\n\t  }\n\t}\n\n\t/**\n\t * Returns all keys less than the given value\n\t * @private\n\t * @param {BSTNode} root - The root of the tree\n\t * @param {*} key - The upper bound value\n\t * @param {function} comparator - The function used to compare keys to @param value\n\t * @param {Array} array - The array that holds the result\n\t * @returns {undefined}\n\t */\n\tfunction less(root, value, comparator, array) {\n\t  if (!root || root.isNil()) {\n\t    return;\n\t  }\n\t  var rootKey = root.key;\n\t  var comparatorResult = comparator(rootKey, value);\n\t  if (comparatorResult === -1) {\n\t    array.push(rootKey);\n\t    less(root.left, value, comparator, array);\n\t    return less(root.right, value, comparator, array);\n\t  }\n\t  return less(root.left, value, comparator, array);\n\t}\n\n\t/**\n\t * Returns all keys greater than the given value\n\t * @private\n\t * @param {BSTNode} root - The root of the tree\n\t * @param {*} key - The lower bound value\n\t * @param {function} comparator - The function used to compare keys to @param value\n\t * @param {Array} array - The array that holds the result\n\t * @returns {undefined}\n\t */\n\tfunction greater(root, value, comparator, array) {\n\t  if (!root || root.isNil()) {\n\t    return;\n\t  }\n\t  var rootKey = root.key;\n\t  var comparatorResult = comparator(rootKey, value);\n\t  if (comparatorResult === 1) {\n\t    array.push(rootKey);\n\t    greater(root.left, value, comparator, array);\n\t    return greater(root.right, value, comparator, array);\n\t  }\n\t  return greater(root.right, value, comparator, array);\n\t}\n\n\t/**\n\t * Returns the max or min based on the given query\n\t * @private\n\t * @param {string} query - The value wanted either min or max\n\t * @param {BSTNode} root - The root of the tree\n\t * @returns {*|undefined} The min or max value in the tree or undefined for empty tree\n\t */\n\tfunction minOrMax(query, root) {\n\t  var currentRoot = root;\n\t  var direction = query === 'min' ? 'left' : 'right';\n\t  if (currentRoot.isNil()) {\n\t    return;\n\t  }\n\t  while (currentRoot[direction].key !== undefined) {\n\t    currentRoot = currentRoot[direction];\n\t  }\n\t  return currentRoot.key;\n\t}\n\n\t/**\n\t * Returns all keys in the given range\n\t * @private\n\t * @param {BSTNode} root - The root of the tree\n\t * @param {*} lower - The lower bound\n\t * @param {*} upper - The upper bound\n\t * @param {function} comparator - The compare function\n\t * @param {Array} array - The result array\n\t * @returns {undefined}\n\t */\n\tfunction keysBetween(root, lower, upper, comparator, array) {\n\t  if (!root || root.isNil()) {\n\t    return;\n\t  }\n\t  var rootKey = root.key;\n\t  var lowerRootComp = comparator(lower, rootKey);\n\t  if (lowerRootComp >= 0) {\n\t    if (lowerRootComp === 0) {\n\t      array.push(rootKey);\n\t    }\n\t    return keysBetween(root.right, lower, upper, comparator, array);\n\t  }\n\t  if (comparator(rootKey, upper) <= 0) {\n\t    array.push(rootKey);\n\t  }\n\t  keysBetween(root.left, lower, upper, comparator, array);\n\t  return keysBetween(root.right, lower, upper, comparator, array);\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _Queue = __webpack_require__(4);\n\n\tvar _Queue2 = _interopRequireDefault(_Queue);\n\n\tvar _Stack = __webpack_require__(3);\n\n\tvar _Stack2 = _interopRequireDefault(_Stack);\n\n\tvar _RedBlackTree = __webpack_require__(15);\n\n\tvar _RedBlackTree2 = _interopRequireDefault(_RedBlackTree);\n\n\tvar _HashSet = __webpack_require__(9);\n\n\tvar _HashSet2 = _interopRequireDefault(_HashSet);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction FirstSearch(graph, startingVertex, structure, BFS) {\n\t  var add = BFS ? _Queue2['default'].prototype.enqueue.bind(structure) : _Stack2['default'].prototype.push.bind(structure);\n\t  var remove = BFS ? _Queue2['default'].prototype.dequeue.bind(structure) : _Stack2['default'].prototype.pop.bind(structure);\n\t  var res = [];\n\t  var visited = new _HashSet2['default'](graph.size());\n\t  add(startingVertex);\n\t  while (structure.size() !== 0) {\n\t    var currentVertex = remove();\n\n\t    if (!visited.has(currentVertex)) {\n\t      visited.add(currentVertex);\n\t      res.push(currentVertex);\n\t      var currentVertexNeighbors = graph.getVal(currentVertex).length;\n\t      for (var i = 0; i < currentVertexNeighbors; i += 1) {\n\t        var curNeighbor = graph.getVal(currentVertex)[i].vertex;\n\t        if (!visited.has(curNeighbor)) {\n\t          add(curNeighbor);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\n\t/**\n\t * Undirected, weighted graph representation\n\t * @class\n\t * @param {number} numVerticies - Number of expected verticies for the graph\n\t *\n\t * @example\n\t * const graph = new Collections.Graph(97);\n\t * // FOR ALL EXAMPLES BELOW. ASSUME graph IS CLEARED BEFORE EACH EXAMPLE\n\t */\n\n\tvar Graph = function () {\n\t  function Graph() {\n\t    _classCallCheck(this, Graph);\n\n\t    this.graph = new _RedBlackTree2['default']();\n\t  }\n\n\t  /**\n\t   * Adds a vertex to the graph\n\t   * @param {*} vertex - The vertex to place into graph\n\t   * @returns {undefined}\n\t   *\n\t   * @example\n\t   * graph.addVertex(\"A\");\n\t   * graph.addVertex(\"B\");\n\t   * // two verticies with id \"A\" and \"B\" are added to graph\n\t   */\n\n\n\t  Graph.prototype.addVertex = function addVertex(vertex) {\n\t    var graph = this.graph;\n\t    // so user does not accidentally overwrite values array\n\n\t    if (!graph.contains(vertex)) {\n\t      graph.put(vertex, []);\n\t    }\n\t  };\n\n\t  /**\n\t   * Connects two verticies to create an undirected edge\n\t   * @param {*} vertex1 - The first vertex\n\t   * @param {*} vertex2 - The second vertex\n\t   * @param {number} [weight=0] - Optional cost of\n\t   * edge between @param vertex1, vertex2\n\t   * @returns {undefined}\n\t   *\n\t   * @example\n\t   * graph.addVertex(\"A\");\n\t   * graph.addVertex(\"B\");\n\t   * graph.addEdge(\"A\", \"B\", 4); // adds edge between \"A\" & \"B\" of weight 4\n\t   */\n\n\n\t  Graph.prototype.addEdge = function addEdge(vertex1, vertex2, weight) {\n\t    // TODO: replace with PQ for Prim's\n\t    var graph = this.graph;\n\n\t    var v1neighbors = graph.getVal(vertex1);\n\t    var v2neighbors = graph.getVal(vertex2);\n\t    // they both exist as verticies\n\t    if (v1neighbors && v2neighbors) {\n\t      // make sure edge does not already exist\n\t      if (v1neighbors.indexOf(vertex2) === -1 && v2neighbors.indexOf(vertex2) === -1) {\n\t        // body\n\t        v1neighbors.push({ vertex: vertex2, weight: weight });\n\t        v2neighbors.push({ vertex: vertex1, weight: weight });\n\t      }\n\t    }\n\t  };\n\n\t  /**\n\t   * Performs Breadth First Search\n\t   * @param {*} startingVertex - The vertex to start Search from\n\t   * @returns {Array} An Array containing verticies in order visited\n\t   * through BFS\n\t   */\n\n\n\t  Graph.prototype.BFS = function BFS(startingVertex) {\n\t    var graph = this.graph;\n\n\t    if (!graph.contains(startingVertex)) {\n\t      return [];\n\t    }\n\t    return FirstSearch(graph, startingVertex, new _Queue2['default'](), true);\n\t  };\n\n\t  /**\n\t   * Performs Depth First Search\n\t   * @param {*} startingVertex - The vertex to start Search from\n\t   * @returns {Array} An Array containing verticies in order visited\n\t   * through DFS\n\t   */\n\n\n\t  Graph.prototype.DFS = function DFS(startingVertex) {\n\t    var graph = this.graph;\n\t    if (!graph.contains(startingVertex)) {\n\t      return [];\n\t    }\n\t    return FirstSearch(graph, startingVertex, new _Stack2['default'](), false);\n\t  };\n\n\t  /**\n\t   * Reports whether the graph is connected\n\t   * @returns {boolean} True if connected and false otherwise\n\t   */\n\n\n\t  Graph.prototype.isConnected = function isConnected() {\n\t    var graph = this.graph;\n\t    var verticies = graph.keys();\n\t    var firstKey = verticies[0];\n\t    return this.BFS(firstKey).length === verticies.length;\n\t  };\n\n\t  return Graph;\n\t}();\n\n\texports['default'] = Graph;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _BSTNode2 = __webpack_require__(12);\n\n\tvar _BSTNode3 = _interopRequireDefault(_BSTNode2);\n\n\tvar _BSTPrototype = __webpack_require__(13);\n\n\tvar _BST2 = __webpack_require__(11);\n\n\tvar _BST3 = _interopRequireDefault(_BST2);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? _defaults(subClass, superClass) : _defaults(subClass, superClass); }\n\n\tvar BLACK = 'black';\n\tvar RED = 'red';\n\n\tvar RBNode = function (_BSTNode) {\n\t  _inherits(RBNode, _BSTNode);\n\n\t  function RBNode(key, value) {\n\t    _classCallCheck(this, RBNode);\n\n\t    var _this = _possibleConstructorReturn(this, _BSTNode.call(this, key, value));\n\n\t    _this.color = BLACK;\n\t    return _this;\n\t  }\n\n\t  RBNode.prototype.isRed = function isRed() {\n\t    return this.color === RED;\n\t  };\n\n\t  RBNode.prototype.isBlack = function isBlack() {\n\t    return this.color === BLACK;\n\t  };\n\n\t  return RBNode;\n\t}(_BSTNode3['default']);\n\n\t/**\n\t * Left rotates the given node\n\t * @private\n\t * @param {BSTNode} node - The node to rotate\n\t * @returns {undefined}\n\t */\n\n\n\tfunction leftRotate(node) {\n\t  var oldRight = node.right;\n\t  var nodeParent = node.parent;\n\t  node.right = oldRight.left;\n\t  oldRight.left.parent = node;\n\t  oldRight.parent = nodeParent;\n\t  // root\n\t  if (nodeParent.isNil()) {\n\t    this.root = oldRight;\n\t  } else if (node.isLeftChild()) {\n\t    nodeParent.left = oldRight;\n\t  } else {\n\t    nodeParent.right = oldRight;\n\t  }\n\t  oldRight.left = node;\n\t  node.parent = oldRight;\n\t}\n\n\t/**\n\t * Right rotates the given node\n\t * @private\n\t * @param {BSTNode} node - The node to rotate\n\t * @returns {undefined}\n\t */\n\tfunction rightRotate(node) {\n\t  var oldLeft = node.left;\n\t  var nodeParent = node.parent;\n\t  node.left = oldLeft.right;\n\t  oldLeft.right.parent = node;\n\t  oldLeft.parent = nodeParent;\n\t  // root\n\t  if (nodeParent.isNil()) {\n\t    this.root = oldLeft;\n\t  } else if (node.isLeftChild()) {\n\t    nodeParent.left = oldLeft;\n\t  } else {\n\t    nodeParent.right = oldLeft;\n\t  }\n\t  oldLeft.right = node;\n\t  node.parent = oldLeft;\n\t}\n\n\t/**\n\t * Performs the re coloring stage upon insert, based on uncle color\n\t * @private\n\t * @param {RBNode} uncle - The uncle of the current node\n\t * @param {RBNode} currentNode - The current node being fixed in the tree\n\t * @returns {undefined}\n\t */\n\tfunction insertFixRecolor(uncle, currentNode) {\n\t  currentNode.parent.color = BLACK;\n\t  uncle.color = BLACK;\n\t  currentNode.parent.parent.color = RED;\n\t}\n\n\t/**\n\t * @private\n\t * Performs the rotation stage on insert, based on uncle color and if current\n\t * right child\n\t * @param {RBNode} currentNode - The current node being fixed in the tree\n\t * @param {RBNode} context - The RBTree instance\n\t * @returns {undefined}\n\t */\n\tfunction insertFixRotate1(node, context) {\n\t  var currentNode = node;\n\t  if (currentNode.isRightChild()) {\n\t    currentNode = currentNode.parent;\n\t    leftRotate.call(context, currentNode);\n\t  }\n\t  currentNode.parent.color = BLACK;\n\t  currentNode.parent.parent.color = RED;\n\t  rightRotate.call(context, currentNode.parent.parent);\n\t}\n\n\t/**\n\t * @private\n\t * Performs the rotation stage on insert, based on uncle color and if current\n\t * node is left child\n\t * @param {RBNode} currentNode - The current node being fixed in the tree\n\t * @param {RBNode} context - The RBTree instance\n\t * @returns {undefined}\n\t */\n\tfunction insertFixRotate2(node, context) {\n\t  var currentNode = node;\n\t  if (currentNode.isLeftChild()) {\n\t    currentNode = currentNode.parent;\n\t    rightRotate.call(context, currentNode);\n\t  }\n\t  currentNode.parent.color = BLACK;\n\t  currentNode.parent.parent.color = RED;\n\t  leftRotate.call(context, currentNode.parent.parent);\n\t}\n\n\t/**\n\t * Performs the recoloring stage when the node's sibling is red\n\t * @private\n\t */\n\tfunction deleteRedSiblingCaseRecolor(currentNode, sibling) {\n\t  sibling.color = BLACK;\n\t  currentNode.parent.color = RED;\n\t}\n\n\t/**\n\t * Fixes up the rb tree after insertion\n\t * @private\n\t * @param {BSTNode} node - The node to begin fixing\n\t * @returns {undefined}\n\t */\n\tfunction insertFix(nodeToFix) {\n\t  var currentNode = nodeToFix;\n\t  var context = this;\n\t  var uncle = void 0;\n\t  while (currentNode.parent.isRed()) {\n\t    if (currentNode.parent.isLeftChild()) {\n\t      uncle = currentNode.parent.parent.right;\n\t      if (uncle.isRed()) {\n\t        insertFixRecolor(uncle, currentNode);\n\t        currentNode = currentNode.parent.parent;\n\t      } else {\n\t        insertFixRotate1(currentNode, context);\n\t      }\n\t    } else {\n\t      uncle = currentNode.parent.parent.left;\n\t      if (uncle.isRed()) {\n\t        insertFixRecolor(uncle, currentNode);\n\t        currentNode = currentNode.parent.parent;\n\t      } else {\n\t        insertFixRotate2(currentNode, context);\n\t      }\n\t    }\n\t  }\n\t  context.root.color = BLACK;\n\t}\n\n\t/**\n\t * Fixes up the rb tree after deletion\n\t * @private\n\t * @param {BSTNode} node - The node to begin fixing\n\t * @returns {undefined}\n\t */\n\tfunction deletefixUp(nodeToFix) {\n\t  var currentNode = nodeToFix;\n\t  var context = this;\n\t  while (!currentNode.parent.isNil() && currentNode.isBlack()) {\n\t    var sibling = void 0;\n\t    if (currentNode.isLeftChild()) {\n\t      sibling = currentNode.parent.right;\n\t      if (sibling.isRed()) {\n\t        deleteRedSiblingCaseRecolor(currentNode, sibling);\n\t        leftRotate.call(context, currentNode.parent);\n\t        sibling = currentNode.parent.right;\n\t      }\n\t      if (sibling.left.isBlack() && sibling.right.isBlack()) {\n\t        sibling.color = RED;\n\t        currentNode = currentNode.parent;\n\t      } else {\n\t        if (sibling.right.isBlack()) {\n\t          sibling.left.color = BLACK;\n\t          sibling.color = RED;\n\t          rightRotate.call(context, sibling);\n\t          sibling = currentNode.parent.right;\n\t        }\n\t        sibling.color = currentNode.parent.color;\n\t        currentNode.parent.color = BLACK;\n\t        sibling.right.color = BLACK;\n\t        leftRotate.call(context, currentNode.parent);\n\t        currentNode = context.root;\n\t      }\n\t    } else {\n\t      sibling = currentNode.parent.left;\n\t      if (sibling.isRed()) {\n\t        deleteRedSiblingCaseRecolor(currentNode, sibling);\n\t        rightRotate.call(context, currentNode.parent);\n\t        sibling = currentNode.parent.left;\n\t      }\n\t      if (sibling.right.isBlack() && sibling.left.isBlack()) {\n\t        sibling.color = RED;\n\t        currentNode = currentNode.parent;\n\t      } else {\n\t        if (sibling.left.isBlack()) {\n\t          sibling.right.color = BLACK;\n\t          sibling.color = RED;\n\t          leftRotate.call(context, sibling);\n\t          sibling = currentNode.parent.left;\n\t        }\n\t        sibling.color = currentNode.parent.color;\n\t        currentNode.parent.color = BLACK;\n\t        sibling.left.color = BLACK;\n\t        rightRotate.call(context, currentNode.parent);\n\t        currentNode = context.root;\n\t      }\n\t    }\n\t  }\n\t  currentNode.color = BLACK;\n\t}\n\n\t/**\n\t * Red-Black Tree representation\n\t * @class\n\t * @extends {BST}\n\t * @param {function} comparator - @see Global#defaultComp for examples\n\t * @example\n\t * const bst = new Collections.RBTree();\n\t */\n\n\tvar RBTree = function (_BST) {\n\t  _inherits(RBTree, _BST);\n\n\t  function RBTree(comparator) {\n\t    _classCallCheck(this, RBTree);\n\n\t    var _this2 = _possibleConstructorReturn(this, _BST.call(this, comparator));\n\n\t    _this2.root = new RBNode();\n\t    return _this2;\n\t  }\n\n\t  RBTree.prototype.put = function put(key, value) {\n\t    var self = this;\n\t    var insertedNode = _BSTPrototype.BSTInsert.call(self, key, value, RBNode);\n\t    if (insertedNode) {\n\t      insertedNode.color = RED;\n\t      insertFix.call(self, insertedNode);\n\t      self.inserts += 1;\n\t    }\n\t    return self;\n\t  };\n\n\t  RBTree.prototype.remove = function remove(key) {\n\t    var self = this;\n\t    // successor and child\n\t    var didRemove = _BSTPrototype.BSTRemove.call(self, key);\n\t    if (didRemove) {\n\t      var successorChild = didRemove.successorChild,\n\t          nodeSuccessor = didRemove.nodeSuccessor;\n\n\t      if (nodeSuccessor.isBlack()) {\n\t        deletefixUp.call(self, successorChild);\n\t      }\n\t      self.inserts -= 1;\n\t      return true;\n\t    }\n\t    return false;\n\t  };\n\n\t  return RBTree;\n\t}(_BST3['default']);\n\n\texports['default'] = RBTree;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _Util = __webpack_require__(2);\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Converts the given data to a lowercase string\n\t * @private\n\t * @param {*} data - The data to convert\n\t * @returns @param data to a string\n\t */\n\tfunction toLowerCaseString(data) {\n\t  return (0, _Util.toString)(data).toLowerCase();\n\t}\n\t/**\n\t * Returns a reference to the tail of the prefix if trie contains it\n\t * @private\n\t * @param {TrieNode} root - The root of the trie\n\t * @param {string} prefix - The prefix to search for\n\t * @returns {(TrieNode|boolean)} Returns a reference to the prefix's last word\n\t * or false if prefix not found in trie\n\t */\n\tfunction getNode(root, pattern) {\n\t  if (pattern.length === 0) {\n\t    return false;\n\t  }\n\t  var currentNode = root.children;\n\t  var currentChar = void 0;\n\t  for (var i = 0; i < pattern.length - 1; i += 1) {\n\t    currentChar = pattern.charAt(i);\n\t    if (!currentNode[currentChar]) {\n\t      return false;\n\t    }\n\t    currentNode = currentNode[currentChar].children;\n\t  }\n\t  return currentNode;\n\t}\n\n\t/**\n\t * Recursively searches a trie to find all words starting at root\n\t * @private\n\t * @param {TrieNode} node - The starting node\n\t * @param {Array} array - The array to add words to\n\t * @returns {undefined}\n\t */\n\tfunction recurseTree(trieNode, array) {\n\t  if (!trieNode) {\n\t    return;\n\t  }\n\t  // all character children\n\t  var keys = Object.keys(trieNode);\n\t  for (var i = 0; i < keys.length; i += 1) {\n\t    var currentNode = trieNode[keys[i]];\n\t    if (currentNode.endOfWord) {\n\t      array.push(currentNode.word);\n\t    }\n\t    recurseTree(currentNode.children, array);\n\t  }\n\t}\n\n\t/**\n\t * Nodes for Trie\n\t * @class\n\t * @private\n\t */\n\n\tvar TrieNode = function () {\n\t  function TrieNode() {\n\t    _classCallCheck(this, TrieNode);\n\n\t    this.children = {};\n\t    this.endOfWord = false;\n\t    this.word = null;\n\t  }\n\n\t  TrieNode.prototype.hasChildren = function hasChildren() {\n\t    /**\n\t     *Using this instead of Object.keys because I only need existence of one child\n\t     *not all\n\t     */\n\t    var children = this.children;\n\t    // eslint-disable-next-line no-restricted-syntax\n\n\t    for (var prop in children) {\n\t      if (Object.prototype.hasOwnProperty.call(children, prop)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\n\t  return TrieNode;\n\t}();\n\n\t/**\n\t * Trie (prefix tree) representation\n\t * @class\n\t *\n\t * @example\n\t * const trie = new Collections.Trie();\n\t * // FOR ALL EXAMPLES BELOW. ASSUME trie IS CLEARED BEFORE EACH EXAMPLE\n\t */\n\n\n\tvar Trie = function () {\n\t  function Trie() {\n\t    _classCallCheck(this, Trie);\n\n\t    this.root = new TrieNode();\n\t  }\n\n\t  /**\n\t   * Converts the given data to string and adds it to trie\n\t   * @param {*} word - The word to add into trie\n\t   * @returns {undefined}\n\t   */\n\n\n\t  Trie.prototype.addWord = function addWord() {\n\t    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\t    var currentNode = this.root.children;\n\t    var word = toLowerCaseString(data);\n\t    var currentChar = void 0;\n\t    for (var i = 0; i < word.length; i += 1) {\n\t      currentChar = word.charAt(i);\n\t      // path does not exist currently in trie\n\t      if (!currentNode[currentChar]) {\n\t        currentNode[currentChar] = new TrieNode();\n\t      }\n\t      // add end of word and word flags\n\t      if (i === word.length - 1) {\n\t        currentNode[currentChar].endOfWord = true;\n\t        currentNode[currentChar].word = word;\n\t      }\n\t      // trickle down the tree\n\t      currentNode = currentNode[currentChar].children;\n\t    }\n\t  };\n\n\t  /**\n\t   * Reports whether the trie contains the given word\n\t   * @param {*} data - The data to search for\n\t   * @returns {boolean} True if the trie contains @param data.toString()\n\t   * or false if it does not\n\t   */\n\n\n\t  Trie.prototype.containsWord = function containsWord() {\n\t    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\t    var word = toLowerCaseString(data);\n\t    var foundNode = getNode(this.root, word);\n\t    if (foundNode) {\n\t      var lastChar = word.charAt(word.length - 1);\n\t      if (foundNode[lastChar] && foundNode[lastChar].word === word) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\n\t  /*\n\t  * Reports whether the trie contains the given prefix\n\t  * @param {string} prefix - The prefix string\n\t  * @returns {boolean} True or false if prefix does not exist\n\t  *\n\t  * @example\n\t  * trie.addWord(\"apple\");\n\t  * trie.addWord.(\"app\");\n\t  * trie.containsPrefix(\"apple\"); // false\n\t  * trie.containsPrefix(\"app\"); // true\n\t  */\n\n\n\t  Trie.prototype.containsPrefix = function containsPrefix() {\n\t    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\t    var root = this.root;\n\t    var str = toLowerCaseString(prefix);\n\t    var foundNode = getNode(root, str);\n\t    if (foundNode) {\n\t      var lastChar = str.charAt(str.length - 1);\n\t      if (foundNode[lastChar]) {\n\t        return foundNode[lastChar].hasChildren();\n\t      }\n\t    }\n\t    return false;\n\t  };\n\n\t  /**\n\t   * Gives all of the words in the trie with the given prefix\n\t   * @param {*} prefix - The prefix to search for\n\t   * @returns {Array} An array with all the words that are prefixed by\n\t   * @param prefix\n\t   *\n\t   * @example\n\t   * trie.addWord(\"apple\");\n\t   * trie.addWord.(\"app\");\n\t   * trie.prefixAll(\"app\"); // returns only apple because app is equal to prefix\n\t   */\n\n\n\t  Trie.prototype.prefixAll = function prefixAll() {\n\t    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\t    if (!this.containsPrefix(prefix)) {\n\t      return [];\n\t    }\n\t    var word = toLowerCaseString(prefix);\n\t    var prefixTail = getNode(this.root, word);\n\t    var lastChar = word.charAt(word.length - 1);\n\t    var prefixes = [];\n\t    recurseTree(prefixTail[lastChar].children, prefixes);\n\t    return prefixes;\n\t  };\n\n\t  return Trie;\n\t}();\n\n\texports['default'] = Trie;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _Util = __webpack_require__(2);\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Various utility methods that can be used on arrays\n\t * @class\n\t * @static\n\t *\n\t * @example\n\t * const arrayMethods = Collections.ArrayUtils;\n\t */\n\tvar ArrayUtils = function () {\n\t  // eslint-disable-next-line no-empty-function\n\t  function ArrayUtils() {\n\t    _classCallCheck(this, ArrayUtils);\n\t  }\n\n\t  /**\n\t   * Removes the element at the given position in the given array\n\t   * @static\n\t   * @param {Array} array - The array to remove elements from\n\t   * @param {number} [index=0] - The index to remove from @param array\n\t   * @returns {Array} Array of removed elements\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2, 3, 4];\n\t   * let removedItems = arrayMethods.remove(myArray, 1);\n\t   * // removedItems contains [2] and myArray is [1, 3, 4]\n\t   */\n\n\n\t  ArrayUtils.remove = function remove() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t    return index >= 0 ? array.splice(index, 1) : [];\n\t  };\n\n\t  /**\n\t   * Removes the first occurence of the given value from the array\n\t   * @static\n\t   * @param {Array} array - The array to remove elements from\n\t   * @param {function} predicate - The function used to compare values\n\t   * @returns {Array} Array of removed elements\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2, 3, 4];\n\t   * let removedItems = arrayMethods.removeElement(myArray, 3);\n\t   * // changedArray contains [3] and myArray is [1, 2, 4]\n\t   */\n\n\n\t  ArrayUtils.removeElement = function removeElement() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    var predicate = arguments[1];\n\n\t    var indexToRemove = ArrayUtils.findIndex(array, predicate);\n\t    return ArrayUtils.remove(array, indexToRemove);\n\t  };\n\n\t  /**\n\t   * Rotates the given array left(negative number) or right(positive number)\n\t   * @static\n\t   * @param {Array} array - The array to rotate\n\t   * @param {number} [times=0] - The number of times to rotate @param array\n\t   * @throws {TypeError} If @param times is not a primitive number\n\t   * @returns {Array} A new Array with rotations applied\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2, 3, 4];\n\t   * let B = arrayMethods.rotate(myArray, 2);\n\t   * // myArray is [1, 2, 3, 4]\n\t   * // B is [3, 4, 1, 2]\n\t   * B = arrayMethods.rotate(B, -2);\n\t   * // B is back to original positioning of myArray [1, 2, 3, 4]\n\t   */\n\n\n\t  ArrayUtils.rotate = function rotate() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t    var len = array.length;\n\t    if (times > 0) {\n\t      var upperBound = len - times;\n\t      return array.slice(upperBound).concat(array.slice(0, upperBound));\n\t    }\n\t    var timesToPositiveInt = Math.abs(times);\n\t    return array.slice(timesToPositiveInt).concat(array.slice(0, timesToPositiveInt));\n\t  };\n\n\t  /**\n\t   * Removes the last element from the given array\n\t   * @static\n\t   * @param {Array} array - The array to pop\n\t   * @param {number} [times=0] - The number of times to pop @param array\n\t   * @returns {Array} A new array equal to\n\t   * [@param array - popped elements]\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2, 3, 4];\n\t   * const altered = arrayMethods.popMany(myArray, 3);\n\t   * // myArray is [1, 2, 3, 4] ; altered is [1]\n\t   */\n\n\n\t  ArrayUtils.popMany = function popMany() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t    var upperBound = array.length - times;\n\t    return upperBound > 0 ? array.slice(0, upperBound) : [];\n\t  };\n\n\t  /**\n\t   * Adds elements to the end of the given array\n\t   * @static\n\t   * @param {Array} [array=empty array] - The array to push elements into\n\t   * @param {*} args - Consecutive arguments to push into array\n\t   * @returns {Array} A new array equal to [@param array + pushed elements]\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2];\n\t   * const altered = arrayMethods.pushMany(myArray, \"push\", \"me\");\n\t   * // myArray is unchanged ; altered = [1, 2, \"push\", \"me\"]\n\t   */\n\n\n\t  ArrayUtils.pushMany = function pushMany() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n\t    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t      args[_key - 1] = arguments[_key];\n\t    }\n\n\t    return array.concat(args);\n\t  };\n\n\t  /**\n\t   * Removes the first element from the given array\n\t   * @static\n\t   * @param {Array} array - The array to shift\n\t   * @param {number} [times=0] - The number of times to shift @param array\n\t   * @returns {Array} A new array equal to\n\t   * [@param array - shifted elements]\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2, 3, 4];\n\t   * const altered = arrayMethods.shiftMany(myArray, 3);\n\t   * // myArray is [1, 2, 3, 4] ; altered is [4]\n\t   */\n\n\n\t  ArrayUtils.shiftMany = function shiftMany() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t    return times > 0 ? array.slice(times) : array;\n\t  };\n\n\t  /**\n\t   * Adds elements to the front of the given array\n\t   * @static\n\t   * @param {Array} [array=empty array] - The array to add elements into\n\t   * @param {*} args - Consecutive arguments to push into array\n\t   * @returns {Array} A new array equal to\n\t   * [unshifted elements + @param array ]\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2, 3, 4];\n\t   * const altered = arrayMethods.unshiftMany(myArray, \"hi\");\n\t   * // myArray is [1, 2, 3, 4] ; altered is [\"hi\", 1, 2, 3, 4]\n\t   */\n\n\n\t  ArrayUtils.unshiftMany = function unshiftMany() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n\t    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t      args[_key2 - 1] = arguments[_key2];\n\t    }\n\n\t    return args.concat(array);\n\t  };\n\n\t  /**\n\t   * Returns a random index in the given array\n\t   * @static\n\t   * @param {Array} array - The array to get random index from\n\t   * @returns {*} Random element in @param array\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2];\n\t   * const altered = arrayMethods.getRand(myArray);\n\t   * // altered could be 1 or 2\n\t   */\n\n\n\t  ArrayUtils.getRand = function getRand() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n\t    var randomIndex = (0, _Util.generateRandomInt)(array.length);\n\t    return array[randomIndex];\n\t  };\n\n\t  /**\n\t   * Removes a random element from the given array\n\t   * @static\n\t   * @param {Array} array - The array to remove a random element from\n\t   * @returns {Array} An array of length 1 containing the element removed\n\t   * from @param array\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2];\n\t   * const altered = arrayMethods.removeRand(myArray);\n\t   * // altered could be 1 or 2 ; myArray's length decreases by 1\n\t   */\n\n\n\t  ArrayUtils.removeRand = function removeRand() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n\t    var randomIndex = (0, _Util.generateRandomInt)(array.length);\n\t    return ArrayUtils.remove(array, randomIndex);\n\t  };\n\n\t  /**\n\t   * Shuffles the given array\n\t   * @static\n\t   * @param {Array} array - The array to shuffle\n\t   * @returns {undefined}\n\t   */\n\n\n\t  ArrayUtils.shuffle = function shuffle() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n\t    var arrayLength = array.length;\n\t    for (var i = arrayLength - 1; i > 0; i -= 1) {\n\t      var randomIndex = (0, _Util.generateRandomInt)(i + 1);\n\t      (0, _Util.swap)(array, randomIndex, i);\n\t    }\n\t  };\n\n\t  /**\n\t   * Turns an n dimensional array into a 1 dimensional array\n\t   * @param {Array} array - The array to flatten\n\t   * @returns {Array} @param array to a one dimensional array\n\t   *\n\t   * @example\n\t   * const myArray = [[2], [3], [4, 5]];\n\t   * const altered = arrayMethods.flatten(myArray);\n\t   * // altered will be [2, 3, 4, 5] ; myArray is unchanged\n\t   */\n\n\n\t  ArrayUtils.flatten = function flatten(array) {\n\t    var res = [];\n\t    (0, _Util.flat)(array, res);\n\t    return res;\n\t  };\n\n\t  /**\n\t   * Splits the given array into chunks\n\t   * @param {Array} array - The array to chunk\n\t   * @param {number} [bits=0] - The size of each nested array\n\t   * @throws {TypeError} If @param bits is not a primitive number\n\t   * @returns {Array} A new array split into @param bits\n\t   *\n\t   * @example\n\t   * const myArray = [1, 2, 3, 4];\n\t   * const altered = arrayMethods.chunk(myArray, 2);\n\t   * // altered is [[1, 2], [3, 4]] ; myArray is unchanged\n\t   */\n\n\n\t  ArrayUtils.chunk = function chunk() {\n\t    var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\t    var bits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n\t    var newArr = [];\n\t    if (bits <= 0) {\n\t      return newArr;\n\t    }\n\t    for (var i = 0, len = array.length; i < len; i += bits) {\n\t      var newChunk = array.slice(i, i + bits);\n\t      newArr.push(newChunk);\n\t    }\n\t    return newArr;\n\t  };\n\n\t  /**\n\t   * Finds the first occurrence in the given array where a given callback evaluates to truthy\n\t   * @param {Array} array - The array to search through\n\t   * @param {function(curElement, index)} callback - The function used to evaluate each element\n\t   * @returns {number|undefined} The element @callback is truthy or undefined if none passed\n\t   */\n\n\n\t  ArrayUtils.find = function find(array, callback) {\n\t    var len = array.length;\n\t    var index = 0;\n\t    while (index < len) {\n\t      var data = array[index];\n\t      if (callback(data, index)) {\n\t        return data;\n\t      }\n\t      index += 1;\n\t    }\n\t  };\n\n\t  /**\n\t   * Finds the index in the given array that passes the given testing function\n\t   * @param {Array} array - The array to search through\n\t   * @param {function(curElement, index)} callback - The function used to evaluate each element\n\t   * @returns {number} The index where @callback is truthy or -1 if none passed\n\t   */\n\n\n\t  ArrayUtils.findIndex = function findIndex(array, callback) {\n\t    var len = array.length;\n\t    var index = 0;\n\t    while (index < len) {\n\t      if (callback(array[index], index)) {\n\t        return index;\n\t      }\n\t      index += 1;\n\t    }\n\t    return -1;\n\t  };\n\n\t  /**\n\t   * Returns a new array with elements that give non-truthy values for the given testing function\n\t   * @param {Array} array - The array to filter\n\t   * @param {function(curElement, index)} callback - The function used to evaluate each element\n\t   * @returns {Array} A new Array filled wit only elements that did not pass the test\n\t   */\n\n\n\t  ArrayUtils.filterNot = function filterNot(array, callback) {\n\t    var len = array.length;\n\t    var res = [];\n\t    var index = 0;\n\t    while (index < len) {\n\t      var data = array[index];\n\t      if (!callback(data, index)) {\n\t        res.push(data);\n\t      }\n\t      index += 1;\n\t    }\n\t    return res;\n\t  };\n\n\t  /**\n\t   * Returns a new Array with elements mapped only if they pass a testing function first\n\t   * @param {Array} array - The array to map to another array\n\t   * @param {function(curElement, index)} test - The testing function\n\t   * @param {function(curElement, index)} mapper - The mappping function\n\t   * @return {Array} A new Array with mapped elements that pass the @param test\n\t   */\n\n\n\t  ArrayUtils.mapIf = function mapIf(array, test, mapper) {\n\t    var len = array.length;\n\t    var index = 0;\n\t    var res = [];\n\t    while (index < len) {\n\t      var data = array[index];\n\t      if (test(data, index)) {\n\t        var mappedElement = mapper(data, index);\n\t        res.push(mappedElement);\n\t      }\n\t      index += 1;\n\t    }\n\t    return res;\n\t  };\n\n\t  return ArrayUtils;\n\t}();\n\n\texports['default'] = ArrayUtils;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _SetInterface2 = __webpack_require__(10);\n\n\tvar _SetInterface3 = _interopRequireDefault(_SetInterface2);\n\n\tvar _RedBlackTree = __webpack_require__(15);\n\n\tvar _RedBlackTree2 = _interopRequireDefault(_RedBlackTree);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? _defaults(subClass, superClass) : _defaults(subClass, superClass); }\n\n\t/**\n\t * Set representaion\n\t * @class\n\t * @implements {SetInterface}\n\t * @param {function} comparator - @see Global#defaultComparator\n\t *\n\t * @example\n\t * const set = new Collections.Set();\n\t */\n\tvar Set = function (_SetInterface) {\n\t  _inherits(Set, _SetInterface);\n\n\t  function Set(comparator) {\n\t    _classCallCheck(this, Set);\n\n\t    var _this = _possibleConstructorReturn(this, _SetInterface.call(this));\n\n\t    _this.set = new _RedBlackTree2['default'](comparator);\n\t    return _this;\n\t  }\n\n\t  Set.prototype.add = function add(element) {\n\t    this.set.put(element, 1);\n\t    return this;\n\t  };\n\n\t  Set.prototype.has = function has(element) {\n\t    return this.set.contains(element);\n\t  };\n\n\t  Set.prototype.remove = function remove(element) {\n\t    return this.set.remove(element);\n\t  };\n\n\t  Set.prototype.entries = function entries() {\n\t    return this.set.keys();\n\t  };\n\n\t  Set.prototype.cardinality = function cardinality() {\n\t    return this.set.size();\n\t  };\n\n\t  Set.prototype.min = function min() {\n\t    return this.map.min();\n\t  };\n\n\t  Set.prototype.max = function max() {\n\t    return this.map.max();\n\t  };\n\n\t  Set.prototype.union = function union(thatSet) {\n\t    return _SetInterface.prototype.union.call(this, thatSet);\n\t  };\n\n\t  Set.prototype.intersect = function intersect(thatSet) {\n\t    return _SetInterface.prototype.intersect.call(this, thatSet);\n\t  };\n\n\t  Set.prototype.diff = function diff(thatSet) {\n\t    return _SetInterface.prototype.diff.call(this, thatSet);\n\t  };\n\n\t  return Set;\n\t}(_SetInterface3['default']);\n\n\texports['default'] = Set;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _RedBlackTree = __webpack_require__(15);\n\n\tvar _RedBlackTree2 = _interopRequireDefault(_RedBlackTree);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n\tfunction _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? _defaults(subClass, superClass) : _defaults(subClass, superClass); }\n\n\t/**\n\t * MultiMap representation\n\t * @class\n\t * @implements {MultiMapInterface}\n\t */\n\tvar MultiMap = function (_RBTree) {\n\t  _inherits(MultiMap, _RBTree);\n\n\t  function MultiMap(comparator) {\n\t    _classCallCheck(this, MultiMap);\n\n\t    return _possibleConstructorReturn(this, _RBTree.call(this, comparator));\n\t  }\n\n\t  MultiMap.prototype.put = function put(key, value) {\n\t    var foundValues = _RBTree.prototype.getVal.call(this, key);\n\t    if (foundValues) {\n\t      if (foundValues.indexOf(value) === -1) {\n\t        foundValues.push(value);\n\t      }\n\t    } else {\n\t      _RBTree.prototype.put.call(this, key, [value]);\n\t    }\n\t    return this;\n\t  };\n\n\t  MultiMap.prototype.removeVal = function removeVal(key, value) {\n\t    var foundValues = _RBTree.prototype.getVal.call(this, key);\n\t    var removedValue = [];\n\t    if (foundValues && foundValues.length > 0) {\n\t      var indexOfValue = foundValues.indexOf(value);\n\t      if (indexOfValue !== -1) {\n\t        removedValue = foundValues.splice(indexOfValue, 1);\n\t      }\n\t    }\n\t    return removedValue;\n\t  };\n\n\t  MultiMap.prototype.containsEntry = function containsEntry(key, value) {\n\t    var foundValues = _RBTree.prototype.getVal.call(this, key);\n\t    if (foundValues && foundValues.length > 0) {\n\t      return foundValues.indexOf(value) !== -1;\n\t    }\n\t    return false;\n\t  };\n\n\t  MultiMap.prototype.replaceVal = function replaceVal(key, oldValue, newValue) {\n\t    var foundValues = _RBTree.prototype.getVal.call(this, key);\n\t    if (foundValues && foundValues.length > 0) {\n\t      var index = foundValues.indexOf(oldValue);\n\t      if (index !== -1) {\n\t        return foundValues.splice(index, 1, newValue);\n\t      }\n\t    }\n\t    return [];\n\t  };\n\n\t  return MultiMap;\n\t}(_RedBlackTree2['default']);\n\n\texports['default'] = MultiMap;\n\n/***/ }\n/******/ ])\n});\n;","<template>\r\n  <span class=\"file-uploads\">\r\n  </span>\r\n</template>\r\n<style>\r\n.file-uploads {\r\n  /* overflow: hidden; */\r\n  position: relative;\r\n  text-align: center;\r\n  display: none;\r\n  /* display: inline-block; */\r\n}\r\n</style>\r\n<script>\r\n// import ChunkUploadDefaultHandler from '../chunk/ChunkUploadHandler'\r\nimport LanChunkUploadHandler from '../chunk/LanChunkUploadHandler'\r\nimport { getFilePartMD5 } from '../utils/utils.js'\r\nimport Collections from 'js_data-collections'\r\n\r\nconst CHUNK_DEFAULT_OPTIONS = {\r\n  headers: {},\r\n  action: '',\r\n  minSize: 1048576,\r\n  maxActive: 3,\r\n  maxRetries: 5,\r\n\r\n  handler: LanChunkUploadHandler\r\n}\r\n\r\nconst EVENT_ENUM = {\r\n  ADD: 'add',\r\n  UPDATE: 'update',\r\n  REMOVE: 'remove',\r\n}\r\n\r\nlet needUploadFileIdSet = new Collections.HashSet()\r\nlet uploadSuccessFileMap = new Collections.HashMap()\r\n\r\nexport default {\r\n  name: 'lan-uploader',\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      default: 'file',\r\n    },\r\n\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    maximum: {\r\n      type: Number,\r\n      default() {\r\n        return this.multiple ? 0 : 1\r\n      }\r\n    },\r\n\r\n    addIndex: {\r\n      type: [Boolean, Number],\r\n    },\r\n\r\n    postAction: {\r\n      type: String,\r\n    },\r\n\r\n    putAction: {\r\n      type: String,\r\n    },\r\n\r\n    customAction: {\r\n      type: Function,\r\n    },\r\n\r\n    /**\r\n     * check的url\r\n     */\r\n    checkAction: {\r\n      type: String,\r\n    },\r\n\r\n    /**\r\n     * 是否需要将数据入库\r\n     */\r\n    db: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    headers: {\r\n      type: Object,\r\n      default: Object,\r\n    },\r\n\r\n    data: {\r\n      type: Object,\r\n      default: Object,\r\n    },\r\n\r\n    timeout: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    drop: {\r\n      default: false,\r\n    },\r\n\r\n    dropDirectory: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n\r\n    size: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n\r\n    extensions: {\r\n      default: Array,\r\n    },\r\n\r\n    value: {\r\n      type: Array,\r\n      default: Array,\r\n    },\r\n\r\n    thread: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n\r\n    // Chunk upload enabled\r\n    chunkEnabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    // Chunk upload properties\r\n    chunk: {\r\n      type: Object,\r\n      default: () => {\r\n        return CHUNK_DEFAULT_OPTIONS\r\n      }\r\n    },\r\n\r\n    autoUpload: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      files: this.value,\r\n      features: {\r\n        html5: true,\r\n        directory: false,\r\n        drag: false,\r\n      },\r\n\r\n      active: false,\r\n      dropActive: false,\r\n\r\n      uploading: 0,\r\n\r\n      destroy: false,\r\n\r\n      progress: 0.00, // 总体上传进度\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * mounted\r\n   * @return {[type]} [description]\r\n   */\r\n  mounted() {\r\n    let input = document.createElement('input')\r\n    input.type = 'file'\r\n    input.multiple = true\r\n\r\n    // html5 特征\r\n    if (window.FormData && input.files) {\r\n      // 上传目录特征\r\n      if (typeof input.webkitdirectory === 'boolean' || typeof input.directory === 'boolean') {\r\n        this.features.directory = true\r\n      }\r\n\r\n      // 拖拽特征\r\n      if (this.features.html5 && typeof input.ondrop !== 'undefined') {\r\n        this.features.drop = true\r\n      }\r\n    } else {\r\n      this.features.html5 = false\r\n    }\r\n\r\n    // files 定位缓存\r\n    this.maps = {}\r\n    if (this.files) {\r\n      for (let i = 0; i < this.files.length; i++) {\r\n        let file = this.files[i]\r\n        this.maps[file.id] = file\r\n      }\r\n    }\r\n\r\n    this.$nextTick(function () {\r\n\r\n      // 更新下父级\r\n      if (this.$parent) {\r\n        this.$parent.$forceUpdate()\r\n      }\r\n\r\n      // 拖拽渲染\r\n      this.watchDrop(this.drop)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * beforeDestroy\r\n   * @return {[type]} [description]\r\n   */\r\n  beforeDestroy() {\r\n    // 已销毁\r\n    this.destroy = true\r\n\r\n    // 设置成不激活\r\n    this.active = false\r\n  },\r\n\r\n  computed: {\r\n    /**\r\n     * uploading 正在上传的线程\r\n     * @return {[type]} [description]\r\n     */\r\n\r\n    /**\r\n     * uploaded 文件列表是否全部已上传\r\n     * @return {[type]} [description]\r\n     */\r\n    uploaded() {\r\n      let file\r\n      for (let i = 0; i < this.files.length; i++) {\r\n        file = this.files[i]\r\n        if (file.fileObject && !file.error && !file.success) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    },\r\n\r\n    chunkOptions() {\r\n      return Object.assign(CHUNK_DEFAULT_OPTIONS, this.chunk)\r\n    }\r\n  },\r\n\r\n\r\n  watch: {\r\n    active(active) {\r\n      this.watchActive(active)\r\n    },\r\n\r\n    dropActive() {\r\n      if (this.$parent) {\r\n        this.$parent.$forceUpdate()\r\n      }\r\n    },\r\n\r\n    drop(value) {\r\n      this.watchDrop(value)\r\n    },\r\n\r\n    /**\r\n     * 外部修改 :value v-model\r\n     */\r\n    value(files) {\r\n      if (this.files === files) {\r\n        return\r\n      }\r\n      this.files = files\r\n\r\n      let oldMaps = this.maps\r\n\r\n      // 重写 maps 缓存\r\n      this.maps = {}\r\n      for (let i = 0; i < this.files.length; i++) {\r\n        let file = this.files[i]\r\n        this.maps[file.id] = file\r\n      }\r\n\r\n      // add, update\r\n      for (let key in this.maps) {\r\n        let newFile = this.maps[key]\r\n        let oldFile = oldMaps[key]\r\n        if (newFile !== oldFile) {\r\n          if (newFile && oldFile) {\r\n            this.emitFile(newFile, oldFile, EVENT_ENUM.UPDATE)\r\n          } else if (newFile && !oldFile) {\r\n            this.emitFile(newFile, oldFile, EVENT_ENUM.ADD)\r\n          }\r\n        }\r\n      }\r\n\r\n      // delete\r\n      for (let key in oldMaps) {\r\n        if (!this.maps[key]) {\r\n          this.emitFile(undefined, oldMaps[key], EVENT_ENUM.REMOVE)\r\n        }\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    // 清空\r\n    clear() {\r\n      if (this.files.length) {\r\n        let files = this.files\r\n        this.files = []\r\n\r\n        // 定位\r\n        this.maps = {}\r\n\r\n        // 事件\r\n        this.emitInput()\r\n        for (let i = 0; i < files.length; i++) {\r\n          this.emitFile(undefined, files[i], EVENT_ENUM.REMOVE)\r\n        }\r\n      }\r\n      return true\r\n    },\r\n\r\n    // 选择\r\n    get(id) {\r\n      if (!id) {\r\n        return false\r\n      }\r\n\r\n      if (typeof id === 'object') {\r\n        return this.maps[id.id] || false\r\n      }\r\n\r\n      return this.maps[id] || false\r\n    },\r\n\r\n    // 添加\r\n    // 2018-11-08 将此方法改为async\r\n    async add(_files, index = this.addIndex) {\r\n      let files = _files\r\n      let isArray = files instanceof Array\r\n\r\n      // 不是数组整理成数组\r\n      if (!isArray) {\r\n        files = [files]\r\n      }\r\n\r\n      // 遍历规范对象\r\n      let addFiles = []\r\n      for (let i = 0; i < files.length; i++) {\r\n        let file = files[i]\r\n        if (this.features.html5 && file instanceof Blob) {\r\n          let relativePath = ''\r\n          if (file.webkitRelativePath) {\r\n            relativePath = file.webkitRelativePath.replace(file.name, '')\r\n          }\r\n          if (file.relativePath) {\r\n            relativePath = file.relativePath.replace(file.name, '')\r\n          }\r\n          file = {\r\n            file,\r\n            size: file.size,\r\n            relativePath,\r\n            name: file.name || '',\r\n            type: file.type,\r\n          }\r\n        }\r\n        let fileObject = false\r\n        if (file.fileObject === false) {\r\n          // false\r\n        } else if (file.fileObject) {\r\n          fileObject = true\r\n        } else if (typeof Element !== 'undefined' && file.el instanceof Element) {\r\n          fileObject = true\r\n        } else if (typeof Blob !== 'undefined' && file.file instanceof Blob) {\r\n          fileObject = true\r\n        }\r\n        if (fileObject) {\r\n          file = {\r\n            fileObject: true,\r\n            size: -1,\r\n            name: 'Filename',\r\n            relativePath: '',\r\n            type: '',\r\n            active: false,\r\n            error: '',\r\n            success: false,\r\n            putAction: this.putAction,\r\n            postAction: this.postAction,\r\n            timeout: this.timeout,\r\n            ...file,\r\n            response: {},\r\n\r\n            uploader: this,\r\n            progress: '0.00',          // 只读\r\n            speed: 0,                  // 只读\r\n            // xhr: false,                // 只读\r\n            // iframe: false,             // 只读\r\n          }\r\n\r\n          try {\r\n            file.md5 = await this.md5Action(file.file)\r\n          } catch (e) {\r\n            continue\r\n          }\r\n\r\n          // 必须包含 id\r\n          if (!file.id) {\r\n            file.id = Math.random().toString(36).substr(2)\r\n          }\r\n\r\n          file.data = {\r\n            ...this.data,\r\n            ...file.data ? file.data : {},\r\n            id: file.id,\r\n            db: this.db,\r\n            md5: file.md5,\r\n            name: file.name,\r\n            relativePath: file.relativePath,\r\n            lastModified: file.file.lastModified\r\n          }\r\n\r\n          file.headers = {\r\n            ...this.headers,\r\n            ...file.headers ? file.headers : {},\r\n          }\r\n        }\r\n\r\n        if (this.emitFilter(file, undefined, EVENT_ENUM.ADD)) {\r\n          continue\r\n        }\r\n\r\n        // 最大数量限制\r\n        if (this.maximum > 1 && (addFiles.length + this.files.length) >= this.maximum) {\r\n          break\r\n        }\r\n\r\n        addFiles.push(file)\r\n\r\n        // 最大数量限制\r\n        if (this.maximum === 1) {\r\n          break\r\n        }\r\n      }\r\n\r\n      // 没有文件\r\n      if (!addFiles.length) {\r\n        return false\r\n      }\r\n\r\n      // 如果是 1 清空\r\n      if (this.maximum === 1) {\r\n        this.clear()\r\n      }\r\n\r\n\r\n      // 添加进去 files\r\n      let newFiles\r\n      if (index === true || index === 0) {\r\n        newFiles = addFiles.concat(this.files)\r\n      } else if (index) {\r\n        newFiles = this.files.concat([])\r\n        newFiles.splice(index, 0, ...addFiles)\r\n      } else {\r\n        newFiles = this.files.concat(addFiles)\r\n      }\r\n\r\n      this.files = newFiles\r\n\r\n      // 定位\r\n      for (let i = 0; i < addFiles.length; i++) {\r\n        let file = addFiles[i]\r\n        this.maps[file.id] = file\r\n      }\r\n\r\n      // 事件\r\n      this.emitInput()\r\n      for (let i = 0; i < addFiles.length; i++) {\r\n        this.emitFile(addFiles[i], undefined, EVENT_ENUM.ADD)\r\n      }\r\n\r\n      return isArray ? addFiles : addFiles[0]\r\n    },\r\n\r\n    // 添加表单文件\r\n    addInputFile(el) {\r\n      let files = []\r\n      if (el.files) {\r\n        for (let i = 0; i < el.files.length; i++) {\r\n          let file = el.files[i]\r\n          let relativePath = ''\r\n          if (file.webkitRelativePath) {\r\n            relativePath = file.webkitRelativePath.replace(file.name, '')\r\n          }\r\n          if (file.relativePath) {\r\n            relativePath = file.relativePath.replace(file.name, '')\r\n          }\r\n          files.push({\r\n            size: file.size,\r\n            relativePath,\r\n            name: file.name || '',\r\n            type: file.type,\r\n            file,\r\n          })\r\n        }\r\n      } else {\r\n        var names = el.value.replace(/\\\\/g, '/').split('/')\r\n        delete el.__vuex__\r\n        files.push({\r\n          name: names[names.length - 1],\r\n          el,\r\n        })\r\n      }\r\n      return this.add(files)\r\n    },\r\n\r\n\r\n    // 添加 DataTransfer\r\n    addDataTransfer(dataTransfer) {\r\n      let files = []\r\n      if (dataTransfer.items && dataTransfer.items.length) {\r\n        let items = []\r\n        for (let i = 0; i < dataTransfer.items.length; i++) {\r\n          let item = dataTransfer.items[i]\r\n          if (item.getAsEntry) {\r\n            item = item.getAsEntry() || item.getAsFile()\r\n          } else if (item.webkitGetAsEntry) {\r\n            item = item.webkitGetAsEntry() || item.getAsFile()\r\n          } else {\r\n            item = item.getAsFile()\r\n          }\r\n          if (item) {\r\n            items.push(item)\r\n          }\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n          let forEach = (i) => {\r\n            let item = items[i]\r\n            // 结束 文件数量大于 最大数量\r\n            if (!item || (this.maximum > 0 && files.length >= this.maximum)) {\r\n              this.add(files).then((res) => {\r\n                return resolve(res)\r\n              })\r\n              // return resolve(this.add(files))\r\n            }\r\n            this.getEntry(item).then(function (results) {\r\n              files.push(...results)\r\n              forEach(i + 1)\r\n            })\r\n          }\r\n          forEach(0)\r\n        })\r\n      }\r\n\r\n      if (dataTransfer.files.length) {\r\n        for (let i = 0; i < dataTransfer.files.length; i++) {\r\n          files.push(dataTransfer.files[i])\r\n          if (this.maximum > 0 && files.length >= this.maximum) {\r\n            break\r\n          }\r\n        }\r\n        // return Promise.resolve(this.add(files))\r\n        return this.add(files)\r\n      }\r\n\r\n      return Promise.resolve([])\r\n    },\r\n\r\n\r\n    // 获得 entry\r\n    getEntry(entry, path = '') {\r\n      return new Promise((resolve, reject) => {\r\n        if (entry.isFile) {\r\n          entry.file(function (file) {\r\n            resolve([\r\n              {\r\n                size: file.size,\r\n                relativePath: path,\r\n                name: file.name || '',\r\n                type: file.type,\r\n                file,\r\n              }\r\n            ])\r\n          })\r\n        } else if (entry.isDirectory && this.dropDirectory) {\r\n          let files = []\r\n          let dirReader = entry.createReader()\r\n          let readEntries = () => {\r\n            dirReader.readEntries((entries) => {\r\n              let forEach = (i) => {\r\n                if ((!entries[i] && i === 0) || (this.maximum > 0 && files.length >= this.maximum)) {\r\n                  return resolve(files)\r\n                }\r\n                if (!entries[i]) {\r\n                  return readEntries()\r\n                }\r\n                this.getEntry(entries[i], path + entry.name + '/').then((results) => {\r\n                  files.push(...results)\r\n                  forEach(i + 1)\r\n                })\r\n              }\r\n              forEach(0)\r\n            })\r\n          }\r\n          readEntries()\r\n        } else {\r\n          resolve([])\r\n        }\r\n      })\r\n    },\r\n\r\n\r\n    replace(id1, id2) {\r\n      let file1 = this.get(id1)\r\n      let file2 = this.get(id2)\r\n      if (!file1 || !file2 || file1 === file2) {\r\n        return false\r\n      }\r\n      let files = this.files.concat([])\r\n      let index1 = files.indexOf(file1)\r\n      let index2 = files.indexOf(file2)\r\n      if (index1 === -1 || index2 === -1) {\r\n        return false\r\n      }\r\n      files[index1] = file2\r\n      files[index2] = file1\r\n      this.files = files\r\n      this.emitInput()\r\n      return true\r\n    },\r\n\r\n    // 移除\r\n    remove(id) {\r\n      let file = this.get(id)\r\n      if (file) {\r\n        if (this.emitFilter(undefined, file, EVENT_ENUM.REMOVE)) {\r\n          return false\r\n        }\r\n        let files = this.files.concat([])\r\n        let index = files.indexOf(file)\r\n        if (index === -1) {\r\n          console.error('remove', file)\r\n          return false\r\n        }\r\n        files.splice(index, 1)\r\n        this.files = files\r\n\r\n        // 定位\r\n        delete this.maps[file.id]\r\n\r\n        // 事件\r\n        this.emitInput()\r\n        this.emitFile(undefined, file, EVENT_ENUM.REMOVE)\r\n      }\r\n      return file\r\n    },\r\n\r\n    // 更新\r\n    update(id, data) {\r\n      // console.log('update', id, data)\r\n      let file = this.get(id)\r\n      if (file) {\r\n        let newFile = {\r\n          ...file,\r\n          ...data\r\n        }\r\n        // 停用必须加上错误\r\n        if (file.fileObject && file.active && !newFile.active && !newFile.error && !newFile.success) {\r\n          newFile.error = 'abort'\r\n        }\r\n\r\n        if (this.emitFilter(newFile, file, EVENT_ENUM.UPDATE)) {\r\n          return false\r\n        }\r\n\r\n        let files = this.files.concat([])\r\n        let index = files.indexOf(file)\r\n        if (index === -1) {\r\n          console.error('update', file)\r\n          return false\r\n        }\r\n        files.splice(index, 1, newFile)\r\n        this.files = files\r\n\r\n        // 删除  旧定位 写入 新定位 （已便支持修改id)\r\n        delete this.maps[file.id]\r\n        this.maps[newFile.id] = newFile\r\n\r\n        // 事件\r\n        this.emitInput()\r\n\r\n        // 上传成功\r\n        if (newFile.success && !file.success && data.success) {\r\n          this.emitSuccess(newFile)\r\n        }\r\n        this.emitFile(newFile, file, EVENT_ENUM.UPDATE)\r\n        return newFile\r\n      }\r\n      return false\r\n    },\r\n\r\n    /**\r\n     * 刷新总进度\r\n     */\r\n    refreshProgress() {\r\n      // 进度\r\n      let allProgress = 0.00\r\n      let item\r\n      for (let i = 0, len = this.files.length; i < len; ++i) {\r\n        item = this.files[i]\r\n        if (item.fileObject && needUploadFileIdSet.has(item.id)) {\r\n          allProgress += Number(item.progress)\r\n        }\r\n      }\r\n      const allNumber = needUploadFileIdSet.cardinality()\r\n      this.progress = allNumber === 0 ? 0 : allProgress / allNumber\r\n    },\r\n\r\n    // 预处理 事件 过滤器\r\n    emitFilter(newFile, oldFile, evt) {\r\n      let isPrevent = false\r\n      this.$emit('input-filter', newFile, oldFile, function () {\r\n        isPrevent = true\r\n        return isPrevent\r\n      }, evt)\r\n      return isPrevent\r\n    },\r\n\r\n    // 处理后 事件 分发\r\n    emitFile(newFile, oldFile, evt) {\r\n      if (evt === EVENT_ENUM.ADD) {\r\n        needUploadFileIdSet.add(newFile.id)\r\n      } else if (evt === EVENT_ENUM.REMOVE) {\r\n        needUploadFileIdSet.remove(oldFile.id)\r\n      }\r\n      // console.log('length', oldLength, newLength)\r\n      this.refreshProgress()\r\n      // 自动上传\r\n      if (Boolean(newFile) !== Boolean(oldFile) || oldFile.error !== newFile.error) {\r\n        if (!this.active && this.autoUpload) {\r\n          this.active = true\r\n        }\r\n      }\r\n      this.$emit('input-file', newFile, oldFile, evt)\r\n\r\n      if (newFile && newFile.fileObject && newFile.active && (!oldFile || !oldFile.active)) {\r\n        this.uploading++\r\n        // 激活\r\n        this.$nextTick(function () {\r\n          setTimeout(() => {\r\n            this.upload(newFile).then(() => {\r\n              // eslint-disable-next-line\r\n              newFile = this.get(newFile)\r\n              if (newFile && newFile.fileObject) {\r\n                this.update(newFile, {\r\n                  active: false,\r\n                  success: !newFile.error\r\n                })\r\n              }\r\n            }).catch((e) => {\r\n              this.update(newFile, {\r\n                active: false,\r\n                success: false,\r\n                error: e.code || e.error || e.message || e\r\n              })\r\n            })\r\n          }, parseInt(Math.random() * 50 + 50, 10))\r\n        })\r\n      } else if ((!newFile || !newFile.fileObject || !newFile.active) && oldFile && oldFile.fileObject && oldFile.active) {\r\n        // 停止\r\n        this.uploading--\r\n      }\r\n\r\n      // 自动延续激活\r\n      if (this.active && (Boolean(newFile) !== Boolean(oldFile) || newFile.active !== oldFile.active)) {\r\n        this.watchActive(true)\r\n      }\r\n    },\r\n\r\n    emitInput() {\r\n      this.$emit('input', this.files)\r\n    },\r\n\r\n    emitSuccess(file) {\r\n      this.$emit('single-success', file)\r\n\r\n      let item\r\n      let allSuccess = true\r\n      for (let i = 0, len = this.files.length; i < len; ++i) {\r\n        item = this.files[i]\r\n        if (item.fileObject && needUploadFileIdSet.has(item.id)) {\r\n          if (!item.success || item.error) {\r\n            allSuccess = false\r\n          } else {\r\n            if (!uploadSuccessFileMap.contains(item.id)) {\r\n              uploadSuccessFileMap.put(item.id, item)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // 全成功\r\n      if (allSuccess) {\r\n        this.$emit('all-success', uploadSuccessFileMap.values())\r\n        uploadSuccessFileMap.clear()\r\n        needUploadFileIdSet = new Collections.HashSet()\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 获取文件md5\r\n     */\r\n    md5Action(file) {\r\n      return new Promise((resolve, reject) => {\r\n        // console.log('获取md5')\r\n        getFilePartMD5(file).then(res => {\r\n          // console.log('获取成功,更新文件信息', res)\r\n          // this.update(file, { md5: res })\r\n          // console.log('更新成功')\r\n          resolve(res)\r\n        }).catch(e => {\r\n          reject(e)\r\n        })\r\n      })\r\n    },\r\n\r\n    /**\r\n     * check is there has file or chunk on server\r\n     * if there is file on server, return file\r\n     * if there is chunks on server\r\n     * 文件秒传 与 断点续传\r\n     */\r\n    check(id) {\r\n      let file = this.get(id)\r\n      // 融合 文件data\r\n      // 生成查询串\r\n      let querys = []\r\n      let value\r\n      for (let key in file.data) {\r\n        value = file.data[key]\r\n        if (value !== null && value !== undefined) {\r\n          querys.push(encodeURIComponent(key) + '=' + encodeURIComponent(value))\r\n        }\r\n      }\r\n      let queryString = querys.length ? (this.checkAction.indexOf('?') === -1 ? '?' : '&') + querys.join('&') : ''\r\n      let xhr = new XMLHttpRequest()\r\n      xhr.open('GET', this.checkAction + queryString)\r\n\r\n      return new Promise((resolve, reject) => {\r\n        let complete\r\n        let fn = (e) => {\r\n          // 已经处理过了\r\n          if (complete) {\r\n            return\r\n          }\r\n\r\n          file = this.get(file)\r\n\r\n          // 不存在直接响应\r\n          if (!file) {\r\n            return reject('not_exists')\r\n          }\r\n\r\n          // 不是文件对象\r\n          if (!file.fileObject) {\r\n            return reject('file_object')\r\n          }\r\n\r\n          // 有错误自动响应\r\n          if (file.error) {\r\n            return reject(file.error)\r\n          }\r\n\r\n          // 未激活\r\n          if (!file.active) {\r\n            return reject('abort')\r\n          }\r\n\r\n          // 已完成 直接相应\r\n          if (file.success) {\r\n            return resolve({ status: 'success' })\r\n          }\r\n\r\n          let data = {}\r\n\r\n          switch (e.type) {\r\n            case 'timeout':\r\n            case 'abort':\r\n              data.error = e.type\r\n              break\r\n            case 'error':\r\n              if (!xhr.status) {\r\n                data.error = 'network'\r\n              } else if (xhr.status >= 500) {\r\n                data.error = 'server'\r\n              } else if (xhr.status >= 400) {\r\n                data.error = 'denied'\r\n              }\r\n              break\r\n            default:\r\n              if (xhr.status >= 500) {\r\n                data.error = 'server'\r\n              } else if (xhr.status >= 400) {\r\n                data.error = 'denied'\r\n              } else {\r\n                data.progress = '100.00'\r\n              }\r\n          }\r\n\r\n          if (xhr.responseText) {\r\n            let contentType = xhr.getResponseHeader('Content-Type')\r\n            if (contentType && contentType.indexOf('/json') !== -1) {\r\n              data.response = JSON.parse(xhr.responseText)\r\n            } else {\r\n              data.response = xhr.responseText\r\n            }\r\n          }\r\n\r\n          // 相应错误\r\n          if (file.error) {\r\n            return reject(file.error)\r\n          }\r\n\r\n          // 响应\r\n          return resolve(data)\r\n        }\r\n\r\n        // 事件\r\n        xhr.onload = fn\r\n        xhr.onerror = fn\r\n        xhr.onabort = fn\r\n        xhr.ontimeout = fn\r\n\r\n        // 超时\r\n        if (file.timeout) {\r\n          xhr.timeout = file.timeout\r\n        }\r\n\r\n        // headers\r\n        for (let key in file.headers) {\r\n          xhr.setRequestHeader(key, file.headers[key])\r\n        }\r\n\r\n        // 更新 xhr\r\n        // file = this.update(file, { xhr })\r\n\r\n        // 开始上传\r\n        xhr.send()\r\n      })\r\n    },\r\n\r\n    // 上传\r\n    async upload(id) {\r\n      let file = this.get(id)\r\n\r\n      // 被删除\r\n      if (!file) {\r\n        throw new Error('not_exists')\r\n        // return Promise.reject('not_exists')\r\n      }\r\n\r\n      // 不是文件对象\r\n      if (!file.fileObject) {\r\n        throw new Error('file_object')\r\n        // return Promise.reject('file_object')\r\n      }\r\n\r\n      // 有错误直接响应\r\n      if (file.error) {\r\n        throw new Error(file.error)\r\n        // return Promise.reject(file.error)\r\n      }\r\n\r\n      // 已完成直接响应\r\n      if (file.success) {\r\n        return file\r\n        // return Promise.resolve(file)\r\n      }\r\n\r\n      // 后缀\r\n      let extensions = this.extensions\r\n      if (extensions && (extensions.length || typeof extensions.length === 'undefined')) {\r\n        if (typeof extensions !== 'object' || !(extensions instanceof RegExp)) {\r\n          if (typeof extensions === 'string') {\r\n            extensions = extensions.split(',').map(value => value.trim()).filter(value => value)\r\n          }\r\n          extensions = new RegExp('\\\\.(' + extensions.join('|').replace(/\\./g, '\\\\.') + ')$', 'i')\r\n        }\r\n        if (file.name.search(extensions) === -1) {\r\n          throw new Error('extension')\r\n          // return Promise.reject('extension')\r\n        }\r\n      }\r\n\r\n      // 大小\r\n      if (this.size > 0 && file.size >= 0 && file.size > this.size) {\r\n        throw new Error('size')\r\n        // return Promise.reject('size')\r\n      }\r\n\r\n      if (this.checkAction) {\r\n        try {\r\n          const result = await this.check(file)\r\n          const res = result.response\r\n          if (res.status === 'success') {\r\n            // 文件已存在\r\n            this.update(file, result)\r\n            return true// 直接成功\r\n          } else if (res.status === 'chunks') {\r\n            // chunks 已存在\r\n            this.update(file, { uploadedChunks: res.chunks })\r\n            file.uploadedChunks = res.chunks\r\n          } else if (res.status === 'upload') {\r\n            // 传文件并更新记录\r\n            this.update(file, {\r\n              data: { pass_through: res.pass_through },\r\n              finishBody: { pass_through: res.pass_through }\r\n            })\r\n          }\r\n        } catch (e) {\r\n          throw new Error('check')\r\n        }\r\n      }\r\n\r\n      // 自定义action\r\n      if (this.customAction) {\r\n        try {\r\n          const tmp = await this.customAction(file, this)\r\n          return tmp\r\n        } catch (e) {\r\n          throw e\r\n        }\r\n      }\r\n\r\n      if (this.features.html5) {\r\n        if (this.shouldUseChunkUpload(file)) {\r\n          try {\r\n            const tmp = await this.uploadChunk(file)\r\n            return tmp\r\n          } catch (e) {\r\n            throw e\r\n          }\r\n        }\r\n        if (file.putAction) {\r\n          try {\r\n            const tmp = await this.uploadPut(file)\r\n            return tmp\r\n          } catch (e) {\r\n            throw e\r\n          }\r\n          // return this.uploadPut(file)\r\n        }\r\n        if (file.postAction) {\r\n          try {\r\n            const tmp = await this.uploadHtml5(file)\r\n            return tmp\r\n          } catch (e) {\r\n            throw e\r\n          }\r\n          // return this.uploadHtml5(file)\r\n        }\r\n      }\r\n      if (file.postAction) {\r\n        try {\r\n          const tmp = await this.uploadHtml4(file)\r\n          return tmp\r\n        } catch (e) {\r\n          throw e\r\n        }\r\n        // return this.uploadHtml4(file)\r\n      }\r\n\r\n      throw new Error('No action configured')\r\n      // return Promise.reject('No action configured')\r\n    },\r\n\r\n    /**\r\n     * Whether this file should be uploaded using chunk upload or not\r\n     *\r\n     * @param Object file\r\n     */\r\n    shouldUseChunkUpload(file) {\r\n      return this.chunkEnabled &&\r\n        !!this.chunkOptions.handler &&\r\n        file.size > this.chunkOptions.minSize\r\n    },\r\n\r\n    /**\r\n     * Upload a file using Chunk method\r\n     *\r\n     * @param File file\r\n     */\r\n    uploadChunk(file) {\r\n      const HandlerClass = this.chunkOptions.handler\r\n      file.chunk = new HandlerClass(file, this.chunkOptions)\r\n\r\n      return file.chunk.upload()\r\n    },\r\n\r\n    uploadPut(file) {\r\n      let querys = []\r\n      let value\r\n      for (let key in file.data) {\r\n        value = file.data[key]\r\n        if (value !== null && value !== undefined) {\r\n          querys.push(encodeURIComponent(key) + '=' + encodeURIComponent(value))\r\n        }\r\n      }\r\n      let queryString = querys.length ? (file.putAction.indexOf('?') === -1 ? '?' : '&') + querys.join('&') : ''\r\n      let xhr = new XMLHttpRequest()\r\n      xhr.open('PUT', file.putAction + queryString)\r\n      return this.uploadXhr(xhr, file, file.file)\r\n    },\r\n\r\n    uploadHtml5(file) {\r\n      let form = new window.FormData()\r\n      let value\r\n      for (let key in file.data) {\r\n        value = file.data[key]\r\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\r\n          if (value instanceof File) {\r\n            form.append(key, value, value.name)\r\n          } else {\r\n            form.append(key, JSON.stringify(value))\r\n          }\r\n        } else if (value !== null && value !== undefined) {\r\n          form.append(key, value)\r\n        }\r\n      }\r\n      form.append(this.name, file.file, file.file.filename || file.name)\r\n      let xhr = new XMLHttpRequest()\r\n      xhr.open('POST', file.postAction)\r\n      return this.uploadXhr(xhr, file, form)\r\n    },\r\n\r\n    uploadXhr(xhr, _file, body) {\r\n      let file = _file\r\n      let speedTime = 0\r\n      let speedLoaded = 0\r\n\r\n      // 进度条\r\n      xhr.upload.onprogress = (e) => {\r\n        // 还未开始上传 已删除 未激活\r\n        file = this.get(file)\r\n        if (!e.lengthComputable || !file || !file.fileObject || !file.active) {\r\n          return\r\n        }\r\n\r\n        // 进度 速度 每秒更新一次\r\n        let speedTime2 = Math.round(Date.now() / 1000)\r\n        if (speedTime2 === speedTime) {\r\n          return\r\n        }\r\n        speedTime = speedTime2\r\n\r\n        file = this.update(file, {\r\n          progress: (e.loaded / e.total * 100).toFixed(2),\r\n          speed: e.loaded - speedLoaded,\r\n        })\r\n        speedLoaded = e.loaded\r\n      }\r\n\r\n      // 检查激活状态\r\n      let interval = setInterval(() => {\r\n        file = this.get(file)\r\n        if (file && file.fileObject && !file.success && !file.error && file.active) {\r\n          return\r\n        }\r\n\r\n        if (interval) {\r\n          clearInterval(interval)\r\n          interval = false\r\n        }\r\n\r\n        try {\r\n          xhr.abort()\r\n          xhr.timeout = 1\r\n        } catch (e) {\r\n        }\r\n      }, 100)\r\n\r\n      return new Promise((resolve, reject) => {\r\n        let complete\r\n        let fn = (e) => {\r\n          // 已经处理过了\r\n          if (complete) {\r\n            return\r\n          }\r\n          complete = true\r\n          if (interval) {\r\n            clearInterval(interval)\r\n            interval = false\r\n          }\r\n\r\n          file = this.get(file)\r\n\r\n          // 不存在直接响应\r\n          if (!file) {\r\n            return reject('not_exists')\r\n          }\r\n\r\n          // 不是文件对象\r\n          if (!file.fileObject) {\r\n            return reject('file_object')\r\n          }\r\n\r\n          // 有错误自动响应\r\n          if (file.error) {\r\n            return reject(file.error)\r\n          }\r\n\r\n          // 未激活\r\n          if (!file.active) {\r\n            return reject('abort')\r\n          }\r\n\r\n\r\n          // 已完成 直接相应\r\n          if (file.success) {\r\n            return resolve(file)\r\n          }\r\n\r\n          let data = {}\r\n\r\n          switch (e.type) {\r\n            case 'timeout':\r\n            case 'abort':\r\n              data.error = e.type\r\n              break\r\n            case 'error':\r\n              if (!xhr.status) {\r\n                data.error = 'network'\r\n              } else if (xhr.status >= 500) {\r\n                data.error = 'server'\r\n              } else if (xhr.status >= 400) {\r\n                data.error = 'denied'\r\n              }\r\n              break\r\n            default:\r\n              if (xhr.status >= 500) {\r\n                data.error = 'server'\r\n              } else if (xhr.status >= 400) {\r\n                data.error = 'denied'\r\n              } else {\r\n                data.progress = '100.00'\r\n              }\r\n          }\r\n\r\n          if (xhr.responseText) {\r\n            let contentType = xhr.getResponseHeader('Content-Type')\r\n            if (contentType && contentType.indexOf('/json') !== -1) {\r\n              data.response = JSON.parse(xhr.responseText)\r\n            } else {\r\n              data.response = xhr.responseText\r\n            }\r\n          }\r\n\r\n          // 更新\r\n          file = this.update(file, data)\r\n\r\n          // 相应错误\r\n          if (file.error) {\r\n            return reject(file.error)\r\n          }\r\n\r\n          // 响应\r\n          return resolve(file)\r\n        }\r\n\r\n        // 事件\r\n        xhr.onload = fn\r\n        xhr.onerror = fn\r\n        xhr.onabort = fn\r\n        xhr.ontimeout = fn\r\n\r\n        // 超时\r\n        if (file.timeout) {\r\n          xhr.timeout = file.timeout\r\n        }\r\n\r\n        // headers\r\n        for (let key in file.headers) {\r\n          xhr.setRequestHeader(key, file.headers[key])\r\n        }\r\n\r\n        // 更新 xhr\r\n        file = this.update(file, { xhr })\r\n\r\n        // 开始上传\r\n        xhr.send(body)\r\n      })\r\n    },\r\n\r\n\r\n\r\n\r\n    uploadHtml4(_file) {\r\n      let file = _file\r\n      let onKeydown = function (e) {\r\n        if (e.keyCode === 27) {\r\n          e.preventDefault()\r\n        }\r\n      }\r\n\r\n      let iframe = document.createElement('iframe')\r\n      iframe.id = 'upload-iframe-' + file.id\r\n      iframe.name = 'upload-iframe-' + file.id\r\n      iframe.src = 'about:blank'\r\n      iframe.setAttribute('style', 'width:1px;height:1px;top:-999em;position:absolute; margin-top:-999em;')\r\n\r\n\r\n      let form = document.createElement('form')\r\n\r\n      form.action = file.postAction\r\n\r\n      form.name = 'upload-form-' + file.id\r\n\r\n\r\n      form.setAttribute('method', 'POST')\r\n      form.setAttribute('target', 'upload-iframe-' + file.id)\r\n      form.setAttribute('enctype', 'multipart/form-data')\r\n\r\n      let value\r\n      let input\r\n      for (let key in file.data) {\r\n        value = file.data[key]\r\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\r\n          value = JSON.stringify(value)\r\n        }\r\n        if (value !== null && value !== undefined) {\r\n          input = document.createElement('input')\r\n          input.type = 'hidden'\r\n          input.name = key\r\n          input.value = value\r\n          form.appendChild(input)\r\n        }\r\n      }\r\n      form.appendChild(file.el)\r\n\r\n      document.body.appendChild(iframe).appendChild(form)\r\n\r\n\r\n\r\n\r\n      let getResponseData = function () {\r\n        let doc\r\n        try {\r\n          if (iframe.contentWindow) {\r\n            doc = iframe.contentWindow.document\r\n          }\r\n        } catch (err) {\r\n        }\r\n        if (!doc) {\r\n          try {\r\n            doc = iframe.contentDocument ? iframe.contentDocument : iframe.document\r\n          } catch (err) {\r\n            doc = iframe.document\r\n          }\r\n        }\r\n        if (doc && doc.body) {\r\n          return doc.body.innerHTML\r\n        }\r\n        return null\r\n      }\r\n\r\n\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          file = this.update(file, { iframe })\r\n\r\n          // 不存在\r\n          if (!file) {\r\n            return reject('not_exists')\r\n          }\r\n\r\n          // 定时检查\r\n          let interval = setInterval(() => {\r\n            file = this.get(file)\r\n            if (file && file.fileObject && !file.success && !file.error && file.active) {\r\n              return\r\n            }\r\n\r\n            if (interval) {\r\n              clearInterval(interval)\r\n              interval = false\r\n            }\r\n\r\n            iframe.onabort({ type: file ? 'abort' : 'not_exists' })\r\n          }, 100)\r\n\r\n\r\n          let complete\r\n          let fn = (e) => {\r\n            // 已经处理过了\r\n            if (complete) {\r\n              return\r\n            }\r\n            complete = true\r\n\r\n\r\n            if (interval) {\r\n              clearInterval(interval)\r\n              interval = false\r\n            }\r\n\r\n            // 关闭 esc 事件\r\n            document.body.removeEventListener('keydown', onKeydown)\r\n\r\n            file = this.get(file)\r\n\r\n            // 不存在直接响应\r\n            if (!file) {\r\n              return reject('not_exists')\r\n            }\r\n\r\n            // 不是文件对象\r\n            if (!file.fileObject) {\r\n              return reject('file_object')\r\n            }\r\n\r\n            // 有错误自动响应\r\n            if (file.error) {\r\n              return reject(file.error)\r\n            }\r\n\r\n            // 未激活\r\n            if (!file.active) {\r\n              return reject('abort')\r\n            }\r\n\r\n            // 已完成 直接相应\r\n            if (file.success) {\r\n              return resolve(file)\r\n            }\r\n\r\n            let response = getResponseData()\r\n            let data = {}\r\n            switch (e.type) {\r\n              case 'abort':\r\n                data.error = 'abort'\r\n                break\r\n              case 'error':\r\n                if (file.error) {\r\n                  data.error = file.error\r\n                } else if (response === null) {\r\n                  data.error = 'network'\r\n                } else {\r\n                  data.error = 'denied'\r\n                }\r\n                break\r\n              default:\r\n                if (file.error) {\r\n                  data.error = file.error\r\n                } else if (data === null) {\r\n                  data.error = 'network'\r\n                } else {\r\n                  data.progress = '100.00'\r\n                }\r\n            }\r\n\r\n            if (response !== null) {\r\n              if (response && response.substr(0, 1) === '{' && response.substr(response.length - 1, 1) === '}') {\r\n                try {\r\n                  response = JSON.parse(response)\r\n                } catch (err) {\r\n                }\r\n              }\r\n              data.response = response\r\n            }\r\n\r\n            // 更新\r\n            file = this.update(file, data)\r\n\r\n            if (file.error) {\r\n              return reject(file.error)\r\n            }\r\n\r\n            // 响应\r\n            return resolve(file)\r\n          }\r\n\r\n\r\n          // 添加事件\r\n          iframe.onload = fn\r\n          iframe.onerror = fn\r\n          iframe.onabort = fn\r\n\r\n\r\n          // 禁止 esc 键\r\n          document.body.addEventListener('keydown', onKeydown)\r\n\r\n          // 提交\r\n          form.submit()\r\n        }, 50)\r\n      }).then(function (res) {\r\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\r\n        return res\r\n      }).catch(function (res) {\r\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\r\n        return res\r\n      })\r\n    },\r\n\r\n\r\n\r\n    watchActive(active) {\r\n      let file\r\n      let index = 0\r\n      while ((file = this.files[index])) {\r\n        index++\r\n        if (!file.fileObject) {\r\n          // 不是文件对象\r\n        } else if (active && !this.destroy) {\r\n          if (this.uploading >= this.thread || (this.uploading && !this.features.html5)) {\r\n            break\r\n          }\r\n          if (!file.active && !file.error && !file.success) {\r\n            this.update(file, { active: true })\r\n          }\r\n        } else {\r\n          if (file.active) {\r\n            this.update(file, { active: false })\r\n          }\r\n        }\r\n      }\r\n      if (this.uploading === 0) {\r\n        this.active = false\r\n      }\r\n    },\r\n\r\n\r\n    watchDrop(_el) {\r\n      let el = _el\r\n      if (!this.features.drop) {\r\n        return\r\n      }\r\n\r\n      // 移除挂载\r\n      if (this.dropElement) {\r\n        try {\r\n          document.removeEventListener('dragenter', this.onDragenter, false)\r\n          document.removeEventListener('dragleave', this.onDragleave, false)\r\n          document.removeEventListener('drop', this.onDocumentDrop, false)\r\n          this.dropElement.removeEventListener('dragover', this.onDragover, false)\r\n          this.dropElement.removeEventListener('drop', this.onDrop, false)\r\n        } catch (e) {\r\n        }\r\n      }\r\n\r\n      if (!el) {\r\n        el = false\r\n      } else if (typeof el === 'string') {\r\n        el = document.querySelector(el) || this.$root.$el.querySelector(el)\r\n      } else if (el === true) {\r\n        el = this.$parent.$el\r\n      }\r\n\r\n      this.dropElement = el\r\n\r\n      if (this.dropElement) {\r\n        document.addEventListener('dragenter', this.onDragenter, false)\r\n        document.addEventListener('dragleave', this.onDragleave, false)\r\n        document.addEventListener('drop', this.onDocumentDrop, false)\r\n        this.dropElement.addEventListener('dragover', this.onDragover, false)\r\n        this.dropElement.addEventListener('drop', this.onDrop, false)\r\n      }\r\n    },\r\n\r\n\r\n    onDragenter(e) {\r\n      e.preventDefault()\r\n      if (this.dropActive) {\r\n        return\r\n      }\r\n      if (!e.dataTransfer) {\r\n        return\r\n      }\r\n      let dt = e.dataTransfer\r\n      if (dt.files && dt.files.length) {\r\n        this.dropActive = true\r\n      } else if (!dt.types) {\r\n        this.dropActive = true\r\n      } else if (dt.types.indexOf && dt.types.indexOf('Files') !== -1) {\r\n        this.dropActive = true\r\n      } else if (dt.types.contains && dt.types.contains('Files')) {\r\n        this.dropActive = true\r\n      }\r\n    },\r\n\r\n    onDragleave(e) {\r\n      e.preventDefault()\r\n      if (!this.dropActive) {\r\n        return\r\n      }\r\n      if (e.target.nodeName === 'HTML' || e.target === e.explicitOriginalTarget || (!e.fromElement && (e.clientX <= 0 || e.clientY <= 0 || e.clientX >= window.innerWidth || e.clientY >= window.innerHeight))) {\r\n        this.dropActive = false\r\n      }\r\n    },\r\n\r\n    onDragover(e) {\r\n      e.preventDefault()\r\n    },\r\n\r\n    onDocumentDrop() {\r\n      this.dropActive = false\r\n    },\r\n\r\n    onDrop(e) {\r\n      e.preventDefault()\r\n      this.addDataTransfer(e.dataTransfer)\r\n    },\r\n  }\r\n}\r\n</script>\r\n","export function longToByteArray(long) {\r\n  var byteArray = [0, 0, 0, 0, 0, 0, 0, 0]\r\n  for (var index = 0; index < byteArray.length; index++) {\r\n    var byte = long & 0xff\r\n    if (byte > 127) {\r\n      byteArray[index] = -(~byte & 0xff) - 1\r\n    } else {\r\n      byteArray[index] = byte\r\n    }\r\n    long = (long - byte) / 256\r\n  }\r\n  return byteArray\r\n}\r\n\r\n/**\r\n * 获取文件部分md5\r\n * 头chunk+中部chunk+尾部chunk\r\n * chunks=1 只取chunk_head\r\n * chunks=2 只取chunk_head / chunk_tail\r\n * chunks>=3 取 head/mid/tail\r\n */\r\nexport function getFilePartMD5(file) {\r\n  /**\r\n   * 通常情况512为一个md5的chunk计算范围,故此取512bit作为chunk单位\r\n   */\r\n  const chunkSize = 512 / 8 // 512bit / 8 = 64bytes\r\n  return new Promise((resolve, reject) => {\r\n    const SparkMD5 = require('spark-md5')\r\n    const spark = new SparkMD5.ArrayBuffer()\r\n    const fileReader = new FileReader()\r\n    const blobSlice =\r\n      File.prototype.slice ||\r\n      File.prototype.mozSlice ||\r\n      File.prototype.webkitSlice\r\n    const chunks = Math.ceil(file.size / chunkSize)\r\n    const mid = Math.ceil(chunks / 2.0)\r\n    // console.log('chunks', chunks)\r\n    // console.log('mid', mid)\r\n    let currentChunk = 0\r\n\r\n    // 由于后端在linux上无法读取精确的毫秒数,所以手动丢失精度.但仍然使用 8位 long存储\r\n    // let lastModifiedSec = file.lastModified / 1000 * 1000\r\n\r\n    fileReader.onload = e => {\r\n      // 已读取了第一快\r\n      spark.append(e.target.result)\r\n      if (chunks === 1) {\r\n        // console.log(1, currentChunk)\r\n        return resolve(spark.end())\r\n      } else if (chunks === 2) {\r\n        // 读取尾部\r\n        // console.log(2, currentChunk)\r\n        if (currentChunk === chunks - 1) {\r\n          return resolve(spark.end())\r\n        }\r\n        currentChunk = chunks - 1\r\n      } else {\r\n        // console.log(3, currentChunk)\r\n        if (currentChunk === chunks - 1) {\r\n          return resolve(spark.end())\r\n        }\r\n        if (currentChunk === mid) {\r\n          currentChunk = chunks - 1 // 最后一块\r\n        } else {\r\n          // 读取中间\r\n          currentChunk = mid\r\n        }\r\n      }\r\n      load()\r\n    }\r\n    fileReader.onerror = e => reject(e)\r\n\r\n    let load = () => {\r\n      var start = currentChunk * chunkSize\r\n      var end = start + chunkSize >= file.size ? file.size : start + chunkSize\r\n      fileReader.readAsArrayBuffer(blobSlice.call(file, start, end))\r\n    }\r\n\r\n    load()\r\n  })\r\n}\r\n\r\nexport function getUploader(component, bind) {\r\n  let parent = component.$parent\r\n  while (parent) {\r\n    if (bind) {\r\n      if (parent.$refs[bind]) {\r\n        return parent.$refs[bind]\r\n      } else {\r\n        parent = parent.$parent\r\n      }\r\n    } else {\r\n      if (parent['lan-uploader']) {\r\n        return parent['lan-uploader']\r\n      } else {\r\n        parent = parent.$parent\r\n      }\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport function each(ary, func, context) {\r\n  if (typeof ary.length !== 'undefined') {\r\n    for (var i = 0, len = ary.length; i < len; i++) {\r\n      if (func.call(context, ary[i], i, ary) === false) {\r\n        break\r\n      }\r\n    }\r\n  } else {\r\n    for (var k in ary) {\r\n      if (func.call(context, ary[k], k, ary) === false) {\r\n        break\r\n      }\r\n    }\r\n  }\r\n}\r\n","import FileUpload from './components/FileUpload.vue'\r\nimport Button from './components/Button.vue'\r\n\r\nconst uploader = {\r\n  version: '2.8.20',\r\n  install,\r\n  FileUpload,\r\n  Button\r\n}\r\n\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(install)\r\n}\r\n\r\nexport default uploader\r\n\r\nfunction install(Vue) {\r\n  if (install.installed) {\r\n    return\r\n  }\r\n  Vue.component(FileUpload.name, FileUpload)\r\n  Vue.component(Button.name, Button)\r\n}\r\n\r\n// module.exports = require('./FileUpload.vue')\r\n"],"names":["createRequest","options","xhr","XMLHttpRequest","open","method","url","responseType","headers","keys","forEach","setRequestHeader","key","body","Promise","resolve","reject","onload","status","response","JSON","parse","err","onerror","send","stringify","ChunkUploadHandler","file","chunks","start","end","this","chunkSize","fileSize","push","slice","maxRetries","progress","active","stopChunks","chunksUploading","abort","startChunking","promise","Object","assign","action","startBody","fileType","fileName","then","res","_this2","sessionId","data","session_id","Number","end_offset","createChunks","catch","i","maxActiveChunks","uploadNextChunk","hasChunksToUpload","uploadChunk","chunksToUpload","length","finish","chunk","updateFileProgress","upload","addEventListener","evt","lengthComputable","Math","round","loaded","total","FormData","name","append","uploadBody","startOffset","blob","uploaded","retries","_this3","finishBody","_this4","parseInt","maxActive","type","size","completedProgress","chunksUploaded","uploadingProgress","reduce","_this5","min","filter","LanChunkUploadHandler","uploader","refreshProgress","index","filterChunks","indexOf","uploadedChunks","join","factory","modules","installedModules","__webpack_require__","moduleId","exports","module","id","call","m","c","p","__esModule","MultiMap","RBTree","Set","ArrayUtils","Trie","Graph","BST","HashSet","HashMap","PriorityQueue","BHeap","Queue","Stack","List","undefined","_List2","_interopRequireDefault","_Stack2","_Queue2","_BHeap2","_PriorityQueue2","_HashMap2","_HashSet2","_BST2","_Graph2","_Trie2","_ArrayUtils2","_RedBlackTree2","_Set2","_MultiMap2","obj","default","_Util","_classCallCheck","instance","Constructor","TypeError","getNode","head","next","Node","prev","tail","prototype","addToFront","newNode","elementAtIndex","arguments","foundNode","addToBack","removeFront","removedData","newHead","removeBack","insert","parentNode","oldParentNext","remove","toRemove","toRemoveNext","comparator","cmp","defaultComparator","contains","clear","predicate","newList","every","some","toArray","temp","element","_typeof","Symbol","_typeof2","iterator","constructor","swap","array","index1","index2","oldIndex1","flat","newArr","curValue","len","Array","isArray","toString","value","a","b","isNumber","isFinite","generateRandomInt","limit","floor","random","_List","stack","pop","peek","queue","enqueue","dequeue","heap","extractRoot","max","heapify","leftChildIndex","rightChildIndex","numIndicies","largest","siftUp","parent","_BHeap","minHeapComparator","objectA","objectB","priority","_HashTable","_HashTable2","initialCapacity","map","put","getVal","values","createTable","newTable","getLocationInTable","table","dividend","divisor","modulo","keyHash","string","hash","charCodeAt","hashString","getKeysOrValues","query","result","tableLen","currentBucket","j","search","bucket","HashTable","inserts","self","searchResult","rehash","splice","oldTable","oldLen","tableSize","_defaults","defaults","getOwnPropertyNames","getOwnPropertyDescriptor","configurable","defineProperty","_SetInterface","_this","ReferenceError","_possibleConstructorReturn","set","subClass","superClass","create","enumerable","writable","setPrototypeOf","add","has","entries","cardinality","union","thatSet","diff","intersect","SetInterface","thisKeys","thisLen","curElement","thatKeys","thatLen","largerSet","smallerSet","smallLen","_BSTNode","_BSTNode2","_BSTPrototype","root","BSTInsert","BSTRemove","node","BSTSearch","inorder","BSTInorder","minOrMax","keysLess","less","keysGreater","greater","keyRange","lower","upper","RangeError","keysBetween","BSTNode","left","right","isNil","isLeftChild","hasLeftChild","hasRightChild","isRightChild","currentRoot","comparatorResult","NodeType","oldRoot","nodeSuccessor","successorChild","successor","prop","rootKey","direction","lowerRootComp","FirstSearch","graph","startingVertex","structure","BFS","bind","visited","currentVertex","currentVertexNeighbors","curNeighbor","vertex","addVertex","addEdge","vertex1","vertex2","weight","v1neighbors","v2neighbors","DFS","isConnected","verticies","firstKey","_BSTNode3","_BST3","_inherits","BLACK","RED","RBNode","color","isRed","isBlack","leftRotate","oldRight","nodeParent","rightRotate","oldLeft","insertFixRecolor","uncle","currentNode","deleteRedSiblingCaseRecolor","sibling","_BST","insertedNode","nodeToFix","context","didRemove","toLowerCaseString","toLowerCase","pattern","children","currentChar","charAt","TrieNode","endOfWord","word","hasChildren","hasOwnProperty","addWord","containsWord","lastChar","containsPrefix","prefix","str","prefixAll","prefixes","recurseTree","trieNode","removeElement","indexToRemove","findIndex","rotate","times","upperBound","concat","timesToPositiveInt","abs","popMany","pushMany","_len","args","_key","shiftMany","unshiftMany","_len2","_key2","getRand","removeRand","randomIndex","shuffle","flatten","bits","newChunk","find","callback","filterNot","mapIf","test","mapper","mappedElement","_SetInterface3","_RedBlackTree","_RBTree","foundValues","removeVal","removedValue","indexOfValue","containsEntry","replaceVal","oldValue","newValue","spark","require","ArrayBuffer","fileReader","FileReader","blobSlice","File","mozSlice","webkitSlice","ceil","mid","currentChunk","e","target","load","readAsArrayBuffer","component","$parent","$refs","install","Vue","installed","FileUpload","Button","window","use"],"mappings":"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"}